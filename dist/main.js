(()=>{"use strict";const e=(e,t)=>{let r={};return r.name=t,r.length=e,r.hitCount=0,r.sunk=!1,r.orientation="horizontal",r.comp=[],r.hitCoor=[],{getShip:()=>r,hit:()=>{r.hitCount+=1,r.hitCount===r.length&&(r.sunk=!0)},isSunk:()=>!0===r.sunk,resetShip:()=>(r.name=t,r.length=e,r.hitCount=0,r.sunk=!1,r.orientation="horizontal",r.comp=[],r.hitCoor=[],r)}},t=()=>{let t=[],r=[],o=[],n={battleship:e(4,"battleship"),cruiser_I:e(3,"cruiser_I"),cruiser_II:e(3,"cruiser_II"),destroyer_I:e(2,"destroyer_I"),destroyer_II:e(2,"destroyer_II"),destroyer_III:e(2,"destroyer_III"),submarine_I:e(1,"submarine_I"),submarine_II:e(1,"submarine_II"),submarine_III:e(1,"submarine_III"),submarine_IV:e(1,"submarine_IV")};const a=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],a=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)n.push([e,l]),l+=1;else for(;a!==e+o;)n.push([a,t]),a+=1;return n},u=(e,r,o)=>{let n=[],u=!0;return r+length-1>9||e>9||e+length-1>9||r>9?alert("Ship is out of bound"):(n=l(e,r,o),u=a(n),!1===u?(u=!0,n=[],alert("square is already occupied")):(o.getShip().comp=n,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:u,getBoard:()=>t,getShips:()=>n,receiveAttack:(e,n)=>(null===t[e][n]?r.push([e,n]):(o.push([e,n]),t[e][n].hit(),t[e][n].getShip().hitCoor.push([e,n])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(n);let t=!0;return e.forEach((e=>{if(!e.isSunk())return t=!1})),t},populateBd:()=>{const e=Object.keys(n),r=["horizontal","vertical"];return e.forEach((e=>{const t=n[e],o=t.getShip().length;let c=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),d=Math.floor(2*Math.random());t.getShip().orientation=r[d];let i=l(c,s,t),m=a(i);for(;s+o-1>9||c+o-1>9||!1===m;)c=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),d=Math.floor(2*Math.random()),t.getShip().orientation=r[d],i=l(c,s,t),m=a(i);u(c,s,t)})),t},resetBoard:()=>{const e=Object.keys(n);t=[],r=[],o=[],e.forEach((e=>{n[e].resetShip()}))}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const a=e.board.getMisses();null===t?a.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],a=o[0][1];e.board.placeShip(n,a,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let a=0;a<t.length;a++)for(let l=0;l<t.length;l++){const u=document.createElement("div");u.classList.add(`${r}-square`),u.setAttribute("data-x",`${a}`),u.setAttribute("data-y",`${l}`),o(e,t[a][l],u,a,l),n.appendChild(u)}return n},a=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},l=(e,t,r)=>{let o,n,a;for("player-Two"===r?(o=t.board.getBoard(),n=t.board.getMisses(),a=document.querySelector(`#board${t.number}`)):(o=e.board.getBoard(),n=e.board.getMisses(),a=document.querySelector(`#board${e.number}`));a.lastElementChild;)a.removeChild(a.lastElementChild);for(let l=0;l<o.length;l++)for(let c=0;c<o.length;c++){const s=o[l][c],d=document.createElement("button");"player-One"===r?d.classList.add(`${e.number}-square`):d.classList.add(`${t.number}-square`),d.setAttribute("data-x",`${l}`),d.setAttribute("data-y",`${c}`),u(e,t,d),null!==s&&s.getShip().hitCount>0&&s.getShip().hitCoor.find((e=>e[0]===l&&e[1]===c))&&(d.setAttribute("style","background-color: red;"),d.setAttribute("disabled","")),n.find((e=>e[0]===l&&e[1]===c))&&(d.setAttribute("style","background-color: green;"),d.setAttribute("disabled","")),a.appendChild(d)}},u=(e,t,r)=>{const o=document.querySelector(".dialog"),n=parseInt(r.getAttribute("data-x")),l=parseInt(r.getAttribute("data-y")),u=document.querySelector(".winner"),c=document.querySelector(".end-game"),d=document.querySelector("#play-window"),i=document.querySelector(".player-name"),m=document.querySelector("main");r.addEventListener("click",(h=>{h.preventDefault();const p=r.getAttribute("class"),b=d.getAttribute("data-id"),y=m.getAttribute("class");let S,g;S="One-square"===p?e.board:t.board,g=S.getBoard(),S.receiveAttack(n,l),null===g[n][l]?(a("One-square"===p?t:e),r.setAttribute("style","background-color: yellow;"),i.textContent="pvc"===y?"Computer`s turn!":"player-One"===b?"Player Two`s turn!":"Player One`s turn!",o.showModal()):(s(g[n][l],"One-square"===p?e.number:t.number),r.setAttribute("style","background-color: red;"),S.isAllSunk()&&(r.setAttribute("style","background-color: red;"),c.showModal(),u.textContent="player-Two"===b?"Congratulations Player Two!":"Congratulations Player One!"))}))},c=e=>{const t=e.board.getShips()[document.querySelector("#ships").value].getShip().length,r=document.querySelector(".shape");for(let e=1;e<=t;e++){const e=document.createElement("div");e.classList.add("square"),r.appendChild(e)}},s=(e,t)=>{const r=e.getShip().name,o=document.querySelector(`.shiplist-${t}`).querySelector(`.${r}`).querySelectorAll(".square");e.isSunk()&&o.forEach((e=>{e.setAttribute("style","background-color: red;")}))},d=document.querySelector(".game_mode"),i=document.querySelector("#pvp"),m=document.querySelector("#pvc"),h=document.querySelectorAll(".restart"),p=document.querySelector(".end-game"),b=document.querySelector("form"),y=document.querySelector("#ships");let S=r("One"),g=r("Two");var f,q;f=S,q=g,document.querySelector("#placeShipBtn").addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector("form").getAttribute("id");const r=parseInt(document.querySelector("#y-coor").value),o=parseInt(document.querySelector("#x-coor").value),a=document.querySelector("#ships").value,l=document.querySelector("#orientation").value;let u;u="playerOne-form"===t?f.board.getShips()[a]:q.board.getShips()[a],u.getShip().orientation=l,Number.isNaN(r)||Number.isNaN(o)||("playerOne-form"===t?(f.board.placeShip(r,o,u),n(f)):(q.board.placeShip(r,o,u),n(q)))})),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector("#finBtn"),n=document.querySelector("form"),l=document.querySelector(".player-name");let u=!1;o.addEventListener("click",(o=>{let c;o.preventDefault();const s=r.getAttribute("class");let d=n.getAttribute("id");if(c="playerOne-form"===d?e.board.getShips():t.board.getShips(),Object.values(c).forEach((e=>{const t=e.getShip().comp;return u=0!==t.length})),u){const r=document.querySelector("#x-coor"),o=document.querySelector("#y-coor"),u=document.querySelector("#battleship");if(r.value="",o.value="",u.removeAttribute("selected"),u.setAttribute("selected",""),"playerOne-form"===d&&(n.setAttribute("id","playerTwo-form"),a(e)),"pvc"===s||"playerTwo-form"===d){n.setAttribute("style","display: none;"),a(t);const e=document.querySelector(".dialog");l.textContent="Player One`s turn!",e.showModal()}}else alert("Please place all the ships first")}))})(S,g),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),a=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(u=>{u.preventDefault();let c=a.getAttribute("data-id");if("player-Two"===c)return n(e),l(e,t,c),a.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===c){const u=r.getAttribute("class");return a.setAttribute("data-id",`player-${t.number}`),"pvc"===u?(((e,t)=>{const r=e.board,o=r.getBoard(),a=r.getMisses(),u=r.getHits(),c=document.querySelector("#play-window"),d=document.querySelector(".winner"),i=document.querySelector(".end-game");let m=Math.floor(10*Math.random()),h=Math.floor(10*Math.random()),p=!0;for(;!0===p;)if(a.find((e=>e[0]===m&&e[1]===h))||u.find((e=>e[0]===m&&e[1]===h)))m=Math.floor(10*Math.random()),h=Math.floor(10*Math.random());else if(r.receiveAttack(m,h),null===o[m][h]){const r=`player-${t.number}`;c.setAttribute("data-id",`player-${e.number}`),n(e),l(e,t,r),p=!1}else e.board.isAllSunk()?(p=!1,i.showModal(),d.textContent="Computer won!"):(s(e.board.getBoard()[m][h],e.number),m=Math.floor(10*Math.random()),h=Math.floor(10*Math.random()))})(e,t),o.close()):(n(t),l(e,t,c),o.close())}}))})(S,g),((e,t)=>{const r=document.querySelector("form");document.querySelector("#random").addEventListener("click",(o=>{o.preventDefault(),"playerOne-form"===r.getAttribute("id")?(e.board.populateBd(),n(e)):(t.board.populateBd(),n(t))}))})(S,g),n(S),n(g),c(S),i.addEventListener("click",(e=>(e.preventDefault(),d.close()))),m.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main");var r;return(r=g).board.populateBd(),n(r),a(r),t.classList.add("pvc"),d.close()})),h.forEach((e=>e.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),r=document.querySelector("#play-window"),o=document.querySelector("#x-coor"),a=document.querySelector("#y-coor"),l=document.querySelector("#battleship"),u=document.querySelectorAll(".square");p.close(),b.setAttribute("id","playerOne-form"),b.removeAttribute("style"),t.classList.remove("pvc"),r.setAttribute("data-id","player-Two"),u.forEach((e=>{e.removeAttribute("style")})),o.value="",a.value="",l.removeAttribute("selected"),l.setAttribute("selected",""),S.board.resetBoard(),g.board.resetBoard(),n(S),n(g),d.showModal()})))),y.addEventListener("change",(()=>{const e=document.querySelector(".shape");for(;e.lastElementChild;)e.removeChild(e.lastElementChild);c(S)})),document.addEventListener("onload",d.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,