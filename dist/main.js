(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=()=>{let t=[],r=[],o={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};const n=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],l=e,a=t;if("horizontal"===r.getShip().orientation)for(;a!==t+o;)n.push([e,a]),a+=1;else for(;l!==e+o;)n.push([l,t]),l+=1;return n},a=(e,r,o)=>{let a=[],s=!0;return r+length-1>9||e>9||e+length-1>9||r>9?console.log("error"):(a=l(e,r,o),s=n(a),!1===s?(s=!0,a=[],console.log("not empty")):(o.getShip().comp=a,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:a,getBoard:()=>t,getShips:()=>o,receiveAttack:(e,o)=>(null===t[e][o]?r.push([e,o]):(t[e][o].hit(),t[e][o].getShip().hitCoor.push([e,o])),t),getMisses:()=>r,isAllSunk:()=>{const e=Object.values(o);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t},populateBd:()=>{const e=Object.keys(o),r=["horizontal","vertical"];return e.forEach((e=>{const t=o[e],s=t.getShip().length;let c=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),i=Math.floor(2*Math.random());t.getShip().orientation=r[i];let d=l(c,u,t),h=n(d);for(;u+s-1>9||c+s-1>9||!1===h;)c=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),i=Math.floor(2*Math.random()),t.getShip().orientation=r[i],d=l(c,u,t),h=n(d);a(c,u,t)})),t}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const l=e.board.getMisses();null===t?l.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],l=o[0][1];e.board.placeShip(n,l,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let l=0;l<t.length;l++)for(let a=0;a<t.length;a++){const s=document.createElement("div");s.classList.add(`${r}-square`),s.setAttribute("data-x",`${l}`),s.setAttribute("data-y",`${a}`),o(e,t[l][a],s,l,a),n.appendChild(s)}return n},l=e=>{const t=e.board.getShips(),r=Object.keys(t),o=document.querySelector(`#player${e.number}-ships`);return r.forEach((e=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),o},a=e=>{document.querySelector(`#placeShipBtn-${e.number}`).addEventListener("click",(t=>{t.preventDefault();const r=parseInt(document.querySelector(`#player${e.number}-y`).value),o=parseInt(document.querySelector(`#player${e.number}-x`).value),l=document.querySelector(`#player${e.number}-ships`).value,a=document.querySelector(`#player${e.number}-orient`).value,s=e.board.getShips()[l];s.getShip().orientation=a,console.log(a),e.board.placeShip(r,o,s),n(e)}))},s=e=>{const t=document.querySelector("main"),r=document.querySelector(`#player${e.number}-finBtn`),o=document.querySelector(`#player${e.number}-form`),n=e.board.getShips(),l=Object.values(n);let a=!1;r.addEventListener("click",(r=>{r.preventDefault();const n=t.getAttribute("class");l.forEach((e=>{const t=e.getShip().comp;return a=0!==t.length})),a?o.setAttribute("style","display: none;"):console.log("Please place all the ships first"),c(e),("pvc"===n||"Two"===e.number)&&document.querySelector(".dialog").showModal()}))},c=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},u=(e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),l=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(a=>{a.preventDefault();let s=l.getAttribute("data-id");if("player-Two"===s)return n(e),i(t),l.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===s){const a=r.getAttribute("class");return l.setAttribute("data-id",`player-${t.number}`),console.log(a),"pvc"===a?(h(e,t),o.close()):(n(t),i(e),o.close())}}))},i=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let l=0;l<t.length;l++){const a=t[n][l],s=document.createElement("button");s.classList.add(`${e.number}-square`),s.setAttribute("data-x",`${n}`),s.setAttribute("data-y",`${l}`),d(e,s),null!==a&&a.getShip().hitCount>0&&a.getShip().hitCoor.find((e=>e[0]===n&&e[1]===l))&&(s.setAttribute("style","background-color: red;"),s.setAttribute("disabled","")),r.find((e=>e[0]===n&&e[1]===l))&&(s.setAttribute("style","background-color: green;"),s.setAttribute("disabled","")),o.appendChild(s)}},d=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),l=parseInt(t.getAttribute("data-x")),a=parseInt(t.getAttribute("data-y"));t.addEventListener("click",(s=>{s.preventDefault(),r.receiveAttack(l,a),null===o[l][a]?(c(e),t.setAttribute("style","background-color: red;"),n.showModal()):t.setAttribute("style","background-color: green;")}))},h=(e,t)=>{const r=e.board,o=r.getBoard(),l=document.querySelector("#play-window");let a=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),c=!0;for(;!0===c;)r.receiveAttack(a,s),null===o[a][s]?(l.setAttribute("data-id",`player-${e.number}`),n(e),i(t),c=!1):(console.log("continuing"),a=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()))},p=document.querySelector(".game_mode"),m=document.querySelector("#pvp"),b=document.querySelector("#pvc"),g=r("One"),y=r("Two");m.addEventListener("click",(e=>(e.preventDefault(),n(g),n(y),l(g),l(y),a(g),a(y),s(g),s(y),u(g,y),p.close()))),b.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),r=document.querySelector("#playerTwo-form");var o;return n(g),n(y),l(g),a(g),s(g),s(y),u(g,y),(o=y).board.populateBd(),n(o),r.setAttribute("style","display: none;"),t.classList.add("pvc"),p.close()})),document.addEventListener("onload",p.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,