(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk,resetShip:()=>(t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],t)}},t=()=>{let t=[],r=[],o=[],n={battleship:e(4),cruiser_I:e(3),cruiser_II:e(3),destroyer_I:e(2),destroyer_II:e(2),destroyer_III:e(2),submarine_I:e(1),submarine_II:e(1),submarine_III:e(1),submarine_IV:e(1)};const a=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],a=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)n.push([e,l]),l+=1;else for(;a!==e+o;)n.push([a,t]),a+=1;return n},u=(e,r,o)=>{let n=[],u=!0;return r+length-1>9||e>9||e+length-1>9||r>9?alert("Ship is out of bound"):(n=l(e,r,o),u=a(n),!1===u?(u=!0,n=[],alert("square is already occupied")):(o.getShip().comp=n,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:u,getBoard:()=>t,getShips:()=>n,receiveAttack:(e,n)=>(null===t[e][n]?r.push([e,n]):(o.push([e,n]),t[e][n].hit(),t[e][n].getShip().hitCoor.push([e,n])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(n);let t=!0;return e.forEach((e=>{if(!e.isSunk())return t=!1})),t},populateBd:()=>{const e=Object.keys(n),r=["horizontal","vertical"];return e.forEach((e=>{const t=n[e],o=t.getShip().length;let c=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),i=Math.floor(2*Math.random());t.getShip().orientation=r[i];let s=l(c,d,t),h=a(s);for(;d+o-1>9||c+o-1>9||!1===h;)c=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),i=Math.floor(2*Math.random()),t.getShip().orientation=r[i],s=l(c,d,t),h=a(s);u(c,d,t)})),t},resetBoard:()=>{const e=Object.keys(n);t=[],r=[],o=[],e.forEach((e=>{n[e].resetShip()}))}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const a=e.board.getMisses();null===t?a.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],a=o[0][1];e.board.placeShip(n,a,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let a=0;a<t.length;a++)for(let l=0;l<t.length;l++){const u=document.createElement("div");u.classList.add(`${r}-square`),u.setAttribute("data-x",`${a}`),u.setAttribute("data-y",`${l}`),o(e,t[a][l],u,a,l),n.appendChild(u)}return n},a=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},l=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let a=0;a<t.length;a++){const l=t[n][a],c=document.createElement("button");c.classList.add(`${e.number}-square`),c.setAttribute("data-x",`${n}`),c.setAttribute("data-y",`${a}`),u(e,c),null!==l&&l.getShip().hitCount>0&&l.getShip().hitCoor.find((e=>e[0]===n&&e[1]===a))&&(c.setAttribute("style","background-color: red;"),c.setAttribute("disabled","")),r.find((e=>e[0]===n&&e[1]===a))&&(c.setAttribute("style","background-color: green;"),c.setAttribute("disabled","")),o.appendChild(c)}},u=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),l=parseInt(t.getAttribute("data-x")),u=parseInt(t.getAttribute("data-y")),c=document.querySelector(".winner"),d=document.querySelector(".end-game"),i=document.querySelector("#play-window"),s=document.querySelector(".player-name"),h=document.querySelector("main");t.addEventListener("click",(m=>{m.preventDefault();const p=i.getAttribute("data-id"),b=h.getAttribute("class");r.receiveAttack(l,u),null===o[l][u]?(a(e),t.setAttribute("style","background-color: yellow;"),s.textContent="pvc"===b?"Computer`s turn!":"player-One"===p?"Player Two`s turn!":"Player One`s turn!",n.showModal()):(t.setAttribute("style","background-color: red;"),e.board.isAllSunk()&&(t.setAttribute("style","background-color: red;"),d.showModal(),"One"===e.number?c.textContent="Congratulations Player Two!":c.textContent="Congratulations Player One!"))}))},c=document.querySelector(".game_mode"),d=document.querySelector("#pvp"),i=document.querySelector("#pvc"),s=document.querySelectorAll(".restart"),h=document.querySelector(".end-game"),m=document.querySelector("form");let p=r("One"),b=r("Two");var y,g;y=p,g=b,document.querySelector("#placeShipBtn").addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector("form").getAttribute("id");const r=parseInt(document.querySelector("#y-coor").value),o=parseInt(document.querySelector("#x-coor").value),a=document.querySelector("#ships").value,l=document.querySelector("#orientation").value;let u;u="playerOne-form"===t?y.board.getShips()[a]:g.board.getShips()[a],u.getShip().orientation=l,Number.isNaN(r)||Number.isNaN(o)||("playerOne-form"===t?(y.board.placeShip(r,o,u),n(y)):(g.board.placeShip(r,o,u),n(g)))})),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector("#finBtn"),n=document.querySelector("form"),l=document.querySelector(".player-name");let u=!1;o.addEventListener("click",(o=>{let c;o.preventDefault();const d=r.getAttribute("class");let i=n.getAttribute("id");if(c="playerOne-form"===i?e.board.getShips():t.board.getShips(),Object.values(c).forEach((e=>{const t=e.getShip().comp;return u=0!==t.length})),u){const r=document.querySelector("#x-coor"),o=document.querySelector("#y-coor"),u=document.querySelector("#battleship");if(r.value="",o.value="",u.removeAttribute("selected"),u.setAttribute("selected",""),"playerOne-form"===i&&(n.setAttribute("id","playerTwo-form"),a(e)),"pvc"===d||"playerTwo-form"===i){n.setAttribute("style","display: none;"),a(t);const e=document.querySelector(".dialog");l.textContent="Player One`s turn!",e.showModal()}}else alert("Please place all the ships first")}))})(p,b),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),a=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(u=>{u.preventDefault();let c=a.getAttribute("data-id");if("player-Two"===c)return n(e),l(t),a.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===c){const u=r.getAttribute("class");return a.setAttribute("data-id",`player-${t.number}`),"pvc"===u?(((e,t)=>{const r=e.board,o=r.getBoard(),a=r.getMisses(),u=r.getHits(),c=document.querySelector("#play-window"),d=document.querySelector(".winner"),i=document.querySelector(".end-game");let s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random()),m=!0;for(;!0===m;)a.find((e=>e[0]===s&&e[1]===h))||u.find((e=>e[0]===s&&e[1]===h))?(s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random())):(r.receiveAttack(s,h),null===o[s][h]?(c.setAttribute("data-id",`player-${e.number}`),n(e),l(t),m=!1):e.board.isAllSunk()?(m=!1,i.showModal(),d.textContent="Computer won!"):(s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random())))})(e,t),o.close()):(n(t),l(e),o.close())}}))})(p,b),n(p),n(b),d.addEventListener("click",(e=>(e.preventDefault(),c.close()))),i.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main");var r;return(r=b).board.populateBd(),n(r),a(r),t.classList.add("pvc"),c.close()})),s.forEach((e=>e.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),r=document.querySelector("#play-window"),o=document.querySelector("#x-coor"),a=document.querySelector("#y-coor"),l=document.querySelector("#battleship");h.close(),m.setAttribute("id","playerOne-form"),m.removeAttribute("style"),t.classList.remove("pvc"),r.setAttribute("data-id","player-Two"),o.value="",a.value="",l.removeAttribute("selected"),l.setAttribute("selected",""),p.board.resetBoard(),b.board.resetBoard(),n(p),n(b),c.showModal()})))),document.addEventListener("onload",c.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,