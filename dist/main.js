(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk,resetShip:()=>(t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],t)}},t=()=>{let t=[],r=[],o=[],a={battleship:e(4),cruiser_I:e(3),cruiser_II:e(3),destroyer_I:e(2),destroyer_II:e(2),destroyer_III:e(2),submarine_I:e(1),submarine_II:e(1),submarine_III:e(1),submarine_IV:e(1)};const n=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],a=e[1],null!==t[o][a]))return r=!1;var o,a})),r},l=(e,t,r)=>{const o=r.getShip().length;let a=[],n=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)a.push([e,l]),l+=1;else for(;n!==e+o;)a.push([n,t]),n+=1;return a},u=(e,r,o)=>{let a=[],u=!0;return r+length-1>9||e>9||e+length-1>9||r>9?alert("Ship is out of bound"):(a=l(e,r,o),u=n(a),!1===u?(u=!0,a=[],alert("square is already occupied")):(o.getShip().comp=a,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:u,getBoard:()=>t,getShips:()=>a,receiveAttack:(e,a)=>(null===t[e][a]?r.push([e,a]):(o.push([e,a]),t[e][a].hit(),t[e][a].getShip().hitCoor.push([e,a])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(a);let t=!0;return e.forEach((e=>{if(!e.isSunk())return t=!1})),t},populateBd:()=>{const e=Object.keys(a),r=["horizontal","vertical"];return e.forEach((e=>{const t=a[e],o=t.getShip().length;let c=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),s=Math.floor(2*Math.random());t.getShip().orientation=r[s];let i=l(c,d,t),m=n(i);for(;d+o-1>9||c+o-1>9||!1===m;)c=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),s=Math.floor(2*Math.random()),t.getShip().orientation=r[s],i=l(c,d,t),m=n(i);u(c,d,t)})),t},resetBoard:()=>{const e=Object.keys(a);t=[],r=[],o=[],e.forEach((e=>{a[e].resetShip()}))}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,a)=>{const n=e.board.getMisses();null===t?n.find((e=>e[0]===o&&e[1]===a))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===a))&&r.setAttribute("style","background-color: red;")},a=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const a=o[0][0],n=o[0][1];e.board.placeShip(a,n,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let a=document.getElementById(`board${r}`);for(;a.lastElementChild;)a.removeChild(a.lastElementChild);for(let n=0;n<t.length;n++)for(let l=0;l<t.length;l++){const u=document.createElement("div");u.classList.add(`${r}-square`),u.setAttribute("data-x",`${n}`),u.setAttribute("data-y",`${l}`),o(e,t[n][l],u,n,l),a.appendChild(u)}return a},n=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},l=(e,t,r)=>{let o,a,n;for("player-Two"===r?(o=t.board.getBoard(),a=t.board.getMisses(),n=document.querySelector(`#board${t.number}`)):(o=e.board.getBoard(),a=e.board.getMisses(),n=document.querySelector(`#board${e.number}`));n.lastElementChild;)n.removeChild(n.lastElementChild);for(let l=0;l<o.length;l++)for(let c=0;c<o.length;c++){const d=o[l][c],s=document.createElement("button");"player-One"===r?s.classList.add(`${e.number}-square`):s.classList.add(`${t.number}-square`),s.setAttribute("data-x",`${l}`),s.setAttribute("data-y",`${c}`),u(e,t,s),null!==d&&d.getShip().hitCount>0&&d.getShip().hitCoor.find((e=>e[0]===l&&e[1]===c))&&(s.setAttribute("style","background-color: red;"),s.setAttribute("disabled","")),a.find((e=>e[0]===l&&e[1]===c))&&(s.setAttribute("style","background-color: green;"),s.setAttribute("disabled","")),n.appendChild(s)}},u=(e,t,r)=>{const o=document.querySelector(".dialog"),a=parseInt(r.getAttribute("data-x")),l=parseInt(r.getAttribute("data-y")),u=document.querySelector(".winner"),c=document.querySelector(".end-game"),d=document.querySelector("#play-window"),s=document.querySelector(".player-name"),i=document.querySelector("main");r.addEventListener("click",(m=>{m.preventDefault();const h=r.getAttribute("class"),p=d.getAttribute("data-id"),b=i.getAttribute("class");let y,g;y="One-square"===h?e.board:t.board,g=y.getBoard(),y.receiveAttack(a,l),null===g[a][l]?(n("One-square"===h?t:e),r.setAttribute("style","background-color: yellow;"),s.textContent="pvc"===b?"Computer`s turn!":"player-One"===p?"Player Two`s turn!":"Player One`s turn!",o.showModal()):(r.setAttribute("style","background-color: red;"),y.isAllSunk()&&(r.setAttribute("style","background-color: red;"),c.showModal(),u.textContent="player-Two"===p?"Congratulations Player Two!":"Congratulations Player One!"))}))},c=document.querySelector(".game_mode"),d=document.querySelector("#pvp"),s=document.querySelector("#pvc"),i=document.querySelectorAll(".restart"),m=document.querySelector(".end-game"),h=document.querySelector("form");let p=r("One"),b=r("Two");var y,g;y=p,g=b,document.querySelector("#placeShipBtn").addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector("form").getAttribute("id");const r=parseInt(document.querySelector("#y-coor").value),o=parseInt(document.querySelector("#x-coor").value),n=document.querySelector("#ships").value,l=document.querySelector("#orientation").value;let u;u="playerOne-form"===t?y.board.getShips()[n]:g.board.getShips()[n],u.getShip().orientation=l,Number.isNaN(r)||Number.isNaN(o)||("playerOne-form"===t?(y.board.placeShip(r,o,u),a(y)):(g.board.placeShip(r,o,u),a(g)))})),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector("#finBtn"),a=document.querySelector("form"),l=document.querySelector(".player-name");let u=!1;o.addEventListener("click",(o=>{let c;o.preventDefault();const d=r.getAttribute("class");let s=a.getAttribute("id");if(c="playerOne-form"===s?e.board.getShips():t.board.getShips(),Object.values(c).forEach((e=>{const t=e.getShip().comp;return u=0!==t.length})),u){const r=document.querySelector("#x-coor"),o=document.querySelector("#y-coor"),u=document.querySelector("#battleship");if(r.value="",o.value="",u.removeAttribute("selected"),u.setAttribute("selected",""),"playerOne-form"===s&&(a.setAttribute("id","playerTwo-form"),n(e)),"pvc"===d||"playerTwo-form"===s){a.setAttribute("style","display: none;"),n(t);const e=document.querySelector(".dialog");l.textContent="Player One`s turn!",e.showModal()}}else alert("Please place all the ships first")}))})(p,b),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),n=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(u=>{u.preventDefault(),u.stopPropagation();let c=n.getAttribute("data-id");if("player-Two"===c)return a(e),l(e,t,c),n.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===c){const u=r.getAttribute("class");return n.setAttribute("data-id",`player-${t.number}`),"pvc"===u?(((e,t)=>{const r=e.board,o=r.getBoard(),n=r.getMisses(),u=r.getHits(),c=document.querySelector("#play-window"),d=document.querySelector(".winner"),s=document.querySelector(".end-game");let i=Math.floor(10*Math.random()),m=Math.floor(10*Math.random()),h=!0;for(;!0===h;)if(n.find((e=>e[0]===i&&e[1]===m))||u.find((e=>e[0]===i&&e[1]===m)))i=Math.floor(10*Math.random()),m=Math.floor(10*Math.random());else if(r.receiveAttack(i,m),null===o[i][m]){const r=`player-${t.number}`;c.setAttribute("data-id",`player-${e.number}`),a(e),l(e,t,r),h=!1}else e.board.isAllSunk()?(h=!1,s.showModal(),d.textContent="Computer won!"):(i=Math.floor(10*Math.random()),m=Math.floor(10*Math.random()))})(e,t),o.close()):(a(t),l(e,t,c),o.close())}}))})(p,b),((e,t)=>{const r=document.querySelector("form");document.querySelector("#random").addEventListener("click",(o=>{o.preventDefault(),"playerOne-form"===r.getAttribute("id")?(e.board.populateBd(),a(e)):(t.board.populateBd(),a(t))}))})(p,b),a(p),a(b),d.addEventListener("click",(e=>(e.preventDefault(),c.close()))),s.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main");var r;return(r=b).board.populateBd(),a(r),n(r),t.classList.add("pvc"),c.close()})),i.forEach((e=>e.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),r=document.querySelector("#play-window"),o=document.querySelector("#x-coor"),n=document.querySelector("#y-coor"),l=document.querySelector("#battleship");m.close(),h.setAttribute("id","playerOne-form"),h.removeAttribute("style"),t.classList.remove("pvc"),r.setAttribute("data-id","player-Two"),o.value="",n.value="",l.removeAttribute("selected"),l.setAttribute("selected",""),p.board.resetBoard(),b.board.resetBoard(),a(p),a(b),c.showModal()})))),document.addEventListener("onload",c.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,