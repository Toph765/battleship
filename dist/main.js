(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=()=>{let t=[],r=[],o=[],n={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};const a=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],a=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)n.push([e,l]),l+=1;else for(;a!==e+o;)n.push([a,t]),a+=1;return n},s=(e,r,o)=>{let n=[],s=!0;return r+length-1>9||e>9||e+length-1>9||r>9?console.log("error"):(n=l(e,r,o),s=a(n),!1===s?(s=!0,n=[],console.log("not empty")):(o.getShip().comp=n,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:s,getBoard:()=>t,getShips:()=>n,receiveAttack:(e,n)=>(null===t[e][n]?r.push([e,n]):(o.push([e,n]),t[e][n].hit(),t[e][n].getShip().hitCoor.push([e,n])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(n);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t},populateBd:()=>{const e=Object.keys(n),r=["horizontal","vertical"];return e.forEach((e=>{const t=n[e],o=t.getShip().length;let i=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),c=Math.floor(2*Math.random());t.getShip().orientation=r[c];let d=l(i,u,t),h=a(d);for(;u+o-1>9||i+o-1>9||!1===h;)i=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),c=Math.floor(2*Math.random()),t.getShip().orientation=r[c],d=l(i,u,t),h=a(d);s(i,u,t)})),t}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const a=e.board.getMisses();null===t?a.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],a=o[0][1];e.board.placeShip(n,a,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let a=0;a<t.length;a++)for(let l=0;l<t.length;l++){const s=document.createElement("div");s.classList.add(`${r}-square`),s.setAttribute("data-x",`${a}`),s.setAttribute("data-y",`${l}`),o(e,t[a][l],s,a,l),n.appendChild(s)}return n},a=e=>{const t=e.board.getShips(),r=Object.keys(t),o=document.querySelector(`#player${e.number}-ships`);return r.forEach((e=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),o},l=e=>{document.querySelector(`#placeShipBtn-${e.number}`).addEventListener("click",(t=>{t.preventDefault();const r=parseInt(document.querySelector(`#player${e.number}-y`).value),o=parseInt(document.querySelector(`#player${e.number}-x`).value),a=document.querySelector(`#player${e.number}-ships`).value,l=document.querySelector(`#player${e.number}-orient`).value,s=e.board.getShips()[a];s.getShip().orientation=l,Number.isNaN(r)||Number.isNaN(o)||(e.board.placeShip(r,o,s),n(e))}))},s=e=>{const t=document.querySelector("main"),r=document.querySelector(`#player${e.number}-finBtn`),o=document.querySelector(`#player${e.number}-form`),n=e.board.getShips(),a=Object.values(n);let l=!1;r.addEventListener("click",(r=>{r.preventDefault();const n=t.getAttribute("class");a.forEach((e=>{const t=e.getShip().comp;return l=0!==t.length})),l?(o.setAttribute("style","display: none;"),i(e),("pvc"===n||"Two"===e.number)&&document.querySelector(".dialog").showModal()):alert("Please place all the ships first")}))},i=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},u=(e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),a=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(l=>{l.preventDefault();let s=a.getAttribute("data-id");if("player-Two"===s)return n(e),c(t),a.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===s){const l=r.getAttribute("class");return a.setAttribute("data-id",`player-${t.number}`),"pvc"===l?(h(e,t),o.close()):(n(t),c(e),o.close())}}))},c=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let a=0;a<t.length;a++){const l=t[n][a],s=document.createElement("button");s.classList.add(`${e.number}-square`),s.setAttribute("data-x",`${n}`),s.setAttribute("data-y",`${a}`),d(e,s),null!==l&&l.getShip().hitCount>0&&l.getShip().hitCoor.find((e=>e[0]===n&&e[1]===a))&&(s.setAttribute("style","background-color: red;"),s.setAttribute("disabled","")),r.find((e=>e[0]===n&&e[1]===a))&&(s.setAttribute("style","background-color: green;"),s.setAttribute("disabled","")),o.appendChild(s)}},d=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),a=parseInt(t.getAttribute("data-x")),l=parseInt(t.getAttribute("data-y"));t.addEventListener("click",(s=>{s.preventDefault(),r.receiveAttack(a,l),null===o[a][l]?(i(e),t.setAttribute("style","background-color: red;"),n.showModal()):t.setAttribute("style","background-color: green;")}))},h=(e,t)=>{const r=e.board,o=r.getBoard(),a=r.getMisses(),l=r.getHits(),s=document.querySelector("#play-window");let i=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),d=!0;for(;!0===d;)a.find((e=>e[0]===i&&e[1]===u))||l.find((e=>e[0]===i&&e[1]===u))?(i=Math.floor(10*Math.random()),u=Math.floor(10*Math.random())):(r.receiveAttack(i,u),null===o[i][u]?(s.setAttribute("data-id",`player-${e.number}`),n(e),c(t),d=!1):(i=Math.floor(10*Math.random()),u=Math.floor(10*Math.random())))},p=document.querySelector(".game_mode"),m=document.querySelector("#pvp"),b=document.querySelector("#pvc"),g=r("One"),y=r("Two");m.addEventListener("click",(e=>(e.preventDefault(),n(g),n(y),a(g),a(y),l(g),l(y),s(g),s(y),u(g,y),p.close()))),b.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),r=document.querySelector("#playerTwo-form");var o;return n(g),n(y),a(g),l(g),s(g),s(y),u(g,y),(o=y).board.populateBd(),n(o),i(o),r.setAttribute("style","display: none;"),t.classList.add("pvc"),p.close()})),document.addEventListener("onload",p.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,