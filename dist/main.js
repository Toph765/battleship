(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=()=>{let t=[],o=[],r={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};const n=e=>{let o=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(r=e[0],n=e[1],null!==t[r][n]))return o=!1;var r,n})),o},l=(e,t,o)=>{const r=o.getShip().length;let n=[],l=e,a=t;if("horizontal"===o.getShip().orientation)for(;a!==t+r;)n.push([e,a]),a+=1;else for(;l!==e+r;)n.push([l,t]),l+=1;return n},a=(e,o,r)=>{let a=[],c=!0;return o+length-1>9||e>9||e+length-1>9||o>9?console.log("error"):(a=l(e,o,r),c=n(a),!1===c?(c=!0,a=[],console.log("not empty")):(r.getShip().comp=a,r.getShip().comp.forEach((e=>{t[e[0]][e[1]]=r})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let o=0;o<10;o++)t[e][o]=null}return t},placeShip:a,getBoard:()=>t,getShips:()=>r,receiveAttack:(e,r)=>(null===t[e][r]?o.push([e,r]):(t[e][r].hit(),t[e][r].getShip().hitCoor.push([e,r])),t),getMisses:()=>o,isAllSunk:()=>{const e=Object.values(r);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t},populateBd:()=>{const e=Object.keys(r),o=["horizontal","vertical"];return e.forEach((e=>{const t=r[e],c=t.getShip().length;let s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),i=Math.floor(2*Math.random());t.getShip().orientation=o[i];let d=l(s,u,t),h=n(d);for(;u+c-1>9||s+c-1>9||!1===h;)s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),i=Math.floor(2*Math.random()),t.getShip().orientation=o[i],d=l(s,u,t),h=n(d);a(s,u,t)})),t}}},o=e=>({number:e,win:!1,board:t(),isComp:!1}),r=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((o=>{const r=t[o].getShip().comp;if(0!==r.length){const n=r[0][0],l=r[0][1];e.board.placeShip(n,l,t[o])}}))})(e);const t=e.board.getBoard(),o=e.number;let r=document.getElementById(`board${o}`);for(;r.lastElementChild;)r.removeChild(r.lastElementChild);for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++){const l=document.createElement("div");l.classList.add(`${o}-square`),l.setAttribute("data-x",`${e}`),l.setAttribute("data-y",`${n}`),null===t[e][n]&&l.setAttribute("style","background-color: blue;"),r.appendChild(l)}return r},n=e=>{const t=e.board.getShips(),o=Object.keys(t),r=document.querySelector(`#player${e.number}-ships`);return o.forEach((e=>{const t=document.createElement("option");t.textContent=e,r.appendChild(t)})),r},l=e=>{document.querySelector(`#placeShipBtn-${e.number}`).addEventListener("click",(t=>{t.preventDefault();const o=parseInt(document.querySelector(`#player${e.number}-y`).value),n=parseInt(document.querySelector(`#player${e.number}-x`).value),l=document.querySelector(`#player${e.number}-ships`).value,a=document.querySelector(`#player${e.number}-orient`).value,c=e.board.getShips()[l];c.getShip().orientation=a,console.log(a),e.board.placeShip(o,n,c),r(e)}))},a=e=>{const t=document.querySelector("main"),o=document.querySelector(`#player${e.number}-finBtn`),r=document.querySelector(`#player${e.number}-form`),n=e.board.getShips(),l=Object.values(n);let a=!1;o.addEventListener("click",(o=>{o.preventDefault();const n=t.getAttribute("class");l.forEach((e=>{const t=e.getShip().comp;return a=0!==t.length})),a?r.setAttribute("style","display: none;"):console.log("Please place all the ships first"),c(e),"pvc"===n&&document.querySelector(".dialog").showModal()}))},c=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},s=(e,t)=>{const o=document.querySelector("main"),n=document.querySelector(".dialog"),l=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(a=>{a.preventDefault();let c=l.getAttribute("data-id");if("player-Two"===c)return r(e),u(t),l.setAttribute("data-id",`player-${e.number}`),n.close();if("player-One"===c){const a=o.getAttribute("class");return l.setAttribute("data-id",`player-${t.number}`),console.log(a),"pvc"===a?(console.log("werk"),r(t),u(e),d(e,t),n.close()):(r(t),u(e),n.close())}}))},u=e=>{const t=e.board.getBoard(),o=e.board.getMisses(),r=document.querySelector(`#board${e.number}`);for(;r.lastElementChild;)r.removeChild(r.lastElementChild);for(let n=0;n<t.length;n++)for(let l=0;l<t.length;l++){const a=t[n][l],c=document.createElement("button");c.classList.add(`${e.number}-square`),c.setAttribute("data-x",`${n}`),c.setAttribute("data-y",`${l}`),i(e,c),null!==a&&a.getShip().hitCount>0&&a.getShip().hitCoor.find((e=>e[0]===`${n}`&&e[1]===`${l}`))&&(c.setAttribute("style","background-color: red;"),c.setAttribute("disabled","")),o.find((e=>e[0]===`${n}`&&e[1]===`${l}`))&&(c.setAttribute("style","background-color: green;"),c.setAttribute("disabled","")),r.appendChild(c)}},i=(e,t)=>{const o=e.board,r=o.getBoard(),n=document.querySelector(".dialog"),l=t.getAttribute("data-x"),a=t.getAttribute("data-y");t.addEventListener("click",(s=>{s.preventDefault(),o.receiveAttack(l,a),null===r[l][a]?(c(e),t.setAttribute("style","background-color: red;"),n.showModal()):t.setAttribute("style","background-color: green;")}))},d=(e,t)=>{const o=document.querySelector(".dialog"),r=e.board,n=r.getBoard();let l=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),c=!0;for(;!0===c;)console.log("attacking"),r.receiveAttack(l,a),console.log(c),null===n[l][a]?(console.log("stop attacking"),u(t),c=!1,o.showModal()):(console.log("continuing"),l=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()))},h=document.querySelector(".game_mode"),p=document.querySelector("#pvp"),m=document.querySelector("#pvc"),g=o("One"),b=o("Two");p.addEventListener("click",(e=>(e.preventDefault(),r(g),r(b),n(g),n(b),l(g),l(b),a(g),a(b),s(g,b),h.close()))),m.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main"),o=document.querySelector("#playerTwo-form");var c;return r(g),r(b),n(g),l(g),a(g),a(b),s(g,b),(c=b).board.populateBd(),r(c),o.setAttribute("style","display: none;"),t.classList.add("pvc"),h.close()})),document.addEventListener("onload",h.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,