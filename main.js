(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.xCoor=null,t.yCoor=null,{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=t=>({number:t,win:!1,board:(()=>{let t=[],r=[],o={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:(e,r,o)=>{const n=o.getShip().length;let l=e,u=r;if(o.getShip().xCoor=e,o.getShip().yCoor=r,"horizontal"===o.getShip().orientation){if(r+n-1>9||e>9)return console.log("error");for(;u!==r+n;)t[e][u]=o,u+=1}else{if(e+n-1>9||r>9)return console.log("error");for(;l!==e+n;)t[l][r]=o,l+=1}return t},getBoard:()=>t,getShips:()=>o,receiveAttack:(e,o)=>(null===t[e][o]?r.push([e,o]):t[e][o].hit(),t),getMisses:()=>r,isAllSunk:()=>{const e=Object.values(o);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t}}})(),isComp:!1}),r=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().xCoor,n=t[r].getShip().yCoor;null!==o&&e.board.placeShip(o,n,t[r])}))})(e);const t=e.board.getBoard(),r=e.number;let o=document.getElementById(`board${r}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++){const l=document.createElement("button");l.classList.add(`${r}-square`),l.setAttribute("data-x",`${e}`),l.setAttribute("data-y",`${n}`),null===t[e][n]&&l.setAttribute("style","background-color: blue;"),o.appendChild(l)}return o},o=e=>{const t=e.board.getShips(),r=Object.keys(t),o=document.querySelector(`#player${e.number}-ships`);return r.forEach((e=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),o},n=e=>{document.querySelector(`#placeShipBtn-${e.number}`).addEventListener("click",(t=>{t.preventDefault();const o=parseInt(document.querySelector(`#player${e.number}-y`).value),n=parseInt(document.querySelector(`#player${e.number}-x`).value),l=document.querySelector(`#player${e.number}-ships`).value,u=document.querySelector(`#player${e.number}-orient`).value,i=e.board.getShips()[l];i.getShip().orientation=u,console.log(u),e.board.placeShip(o,n,i),r(e)}))},l=e=>{const t=e.number,r=document.querySelector(`#player${t}`),o=document.createElement("form"),n=document.createElement("select"),l=document.createElement("select"),u=document.createElement("input"),i=document.createElement("input"),a=document.createElement("button"),s=document.createElement("option"),c=document.createElement("option"),p=document.createElement("button");return o.setAttribute("id",`player${t}-form`),n.setAttribute("name","ships"),n.setAttribute("id",`player${t}-ships`),l.setAttribute("name","orientation"),l.setAttribute("id",`player${t}-orient`),u.setAttribute("type","text"),u.setAttribute("id",`player${t}-x`),u.setAttribute("name","x-coor"),u.setAttribute("placeholder","x"),i.setAttribute("type","text"),i.setAttribute("id",`player${t}-y`),i.setAttribute("name","y-coor"),i.setAttribute("placeholder","y"),a.setAttribute("id",`placeShipBtn-${t}`),a.textContent="Place",p.setAttribute("id",`player${t}-finBtn`),p.textContent="Finish set up",s.textContent="horizontal",c.textContent="vertical",l.append(s,c),o.append(n,u,i,l,a,p),r.appendChild(o),r},u=e=>{const t=document.querySelector(`#player${e.number}-finBtn`),r=document.querySelector(`#player${e.number}-form`),o=e.board.getShips(),n=Object.values(o);let l=!1;n.forEach((e=>{if(null===e.getShip().xCoor)return l=!1;l=!0})),t.addEventListener("click",(t=>{t.preventDefault(),n.forEach((e=>{if(null===e.getShip().xCoor)return l=!1;l=!0})),l?r.setAttribute("style","display: none;"):console.log("Please place all the ships first"),i(e),"Two"===e.number&&document.querySelector(".dialog").showModal()}))},i=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))};let a=t("One"),s=t("Two");r(a),r(s),l(a),l(s),o(a),o(s),n(a),n(s),u(a),u(s),((e,t)=>{const o=document.querySelector(".dialog"),n=document.querySelector("#play-window"),l=document.querySelector("#play");let u=n.getAttribute("data-id");l.addEventListener("click",(t=>{t.preventDefault(),"player-Two"===u&&(r(e),n.setAttribute("data-id",`player-${e.number}`),o.close())}))})(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,