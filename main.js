(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.xCoor=null,t.yCoor=null,t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=()=>{let t=[],r=[],o={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};const n=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],l=e,a=t;if("horizontal"===r.getShip().orientation)for(;a!==t+o;)n.push([e,a]),a+=1;else for(;l!==e+o;)n.push([l,t]),l+=1;return n},a=(e,r,o)=>{let a=[],i=!0;return r+length-1>9||e>9||e+length-1>9||r>9?console.log("error"):(a=l(e,r,o),i=n(a),!1===i?(i=!0,a=[],console.log("not empty")):(o.getShip().comp=a,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:a,getBoard:()=>t,getShips:()=>o,receiveAttack:(e,o)=>(null===t[e][o]?r.push([e,o]):(t[e][o].hit(),t[e][o].getShip().hitCoor.push([e,o])),t),getMisses:()=>r,isAllSunk:()=>{const e=Object.values(o);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t},populateBd:()=>{const e=Object.keys(o),r=["horizontal","vertical"];return e.forEach((e=>{const t=o[e],i=t.getShip().length;let u=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),c=Math.floor(2*Math.random());t.getShip().orientation=r[c];let d=l(u,s,t),p=n(d);for(;s+i-1>9||u+i-1>9||!1===p;)u=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),c=Math.floor(2*Math.random()),t.getShip().orientation=r[c],d=l(u,s,t),p=n(d);a(u,s,t)})),t}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],l=o[0][1];e.board.placeShip(n,l,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let o=document.getElementById(`board${r}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++){const l=document.createElement("div");l.classList.add(`${r}-square`),l.setAttribute("data-x",`${e}`),l.setAttribute("data-y",`${n}`),null===t[e][n]&&l.setAttribute("style","background-color: blue;"),o.appendChild(l)}return o},n=e=>{const t=e.board.getShips(),r=Object.keys(t),o=document.querySelector(`#player${e.number}-ships`);return r.forEach((e=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),o},l=e=>{document.querySelector(`#placeShipBtn-${e.number}`).addEventListener("click",(t=>{t.preventDefault();const r=parseInt(document.querySelector(`#player${e.number}-y`).value),n=parseInt(document.querySelector(`#player${e.number}-x`).value),l=document.querySelector(`#player${e.number}-ships`).value,a=document.querySelector(`#player${e.number}-orient`).value,i=e.board.getShips()[l];i.getShip().orientation=a,console.log(a),e.board.placeShip(r,n,i),o(e)}))},a=e=>{const t=e.number,r=document.querySelector(`#player${t}`),o=document.createElement("form"),n=document.createElement("select"),l=document.createElement("select"),a=document.createElement("input"),i=document.createElement("input"),u=document.createElement("button"),s=document.createElement("option"),c=document.createElement("option"),d=document.createElement("button");return o.setAttribute("id",`player${t}-form`),n.setAttribute("name","ships"),n.setAttribute("id",`player${t}-ships`),l.setAttribute("name","orientation"),l.setAttribute("id",`player${t}-orient`),a.setAttribute("type","text"),a.setAttribute("id",`player${t}-x`),a.setAttribute("name","x-coor"),a.setAttribute("placeholder","x"),i.setAttribute("type","text"),i.setAttribute("id",`player${t}-y`),i.setAttribute("name","y-coor"),i.setAttribute("placeholder","y"),u.setAttribute("id",`placeShipBtn-${t}`),u.textContent="Place",d.setAttribute("id",`player${t}-finBtn`),d.textContent="Finish set up",s.textContent="horizontal",c.textContent="vertical",l.append(s,c),o.append(n,a,i,l,u,d),r.appendChild(o),r},i=e=>{const t=document.querySelector(`#player${e.number}-finBtn`),r=document.querySelector(`#player${e.number}-form`),o=e.board.getShips(),n=Object.values(o);let l=!1;t.addEventListener("click",(t=>{t.preventDefault(),n.forEach((e=>{const t=e.getShip().comp;return l=0!==t.length})),l?r.setAttribute("style","display: none;"):console.log("Please place all the ships first"),u(e),"Two"===e.number&&document.querySelector(".dialog").showModal()}))},u=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},s=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let l=0;l<t.length;l++){const a=t[n][l],i=document.createElement("button");i.classList.add(`${e.number}-square`),i.setAttribute("data-x",`${n}`),i.setAttribute("data-y",`${l}`),c(e,i),null!==a&&a.getShip().hitCount>0&&a.getShip().hitCoor.find((e=>e[0]===`${n}`&&e[1]===`${l}`))&&(i.setAttribute("style","background-color: red;"),i.setAttribute("disabled","")),r.find((e=>e[0]===`${n}`&&e[1]===`${l}`))&&(i.setAttribute("style","background-color: green;"),i.setAttribute("disabled","")),o.appendChild(i)}},c=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),l=t.getAttribute("data-x"),a=t.getAttribute("data-y");t.addEventListener("click",(i=>{i.preventDefault(),r.receiveAttack(l,a),null===o[l][a]?(u(e),t.setAttribute("style","background-color: red;"),n.showModal()):t.setAttribute("style","background-color: green;")}))};let d=r("One"),p=r("Two");var h;o(d),o(p),a(d),a(p),n(d),n(p),l(d),l(p),i(d),i(p),((e,t)=>{const r=document.querySelector(".dialog"),n=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(l=>{l.preventDefault();let a=n.getAttribute("data-id");return"player-Two"===a?(o(e),s(t),n.setAttribute("data-id",`player-${e.number}`),r.close()):"player-One"===a?(o(t),s(e),n.setAttribute("data-id",`player-${t.number}`),r.close()):void 0}))})(d,p),(h=p).board.populateBd(),o(h)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,