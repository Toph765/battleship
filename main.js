(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.xCoor=null,t.yCoor=null,{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=t=>({number:t,win:!1,board:(()=>{let t=[],r=[],o={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:(e,r,o)=>{const n=o.getShip().length;let l=e,s=r;if(o.getShip().xCoor=e,o.getShip().yCoor=r,r+n-1>9||e+n-1>9)return console.log("error");if("horizontal"===o.getShip().orientation)for(;s!==r+n;)t[e][s]=o,s+=1;else for(;l!==e+n;)t[l][r]=o,l+=1;return t},getBoard:()=>t,getShips:()=>o,receiveAttack:(e,o)=>(null===t[e][o]?r.push([e,o]):t[e][o].hit(),t),getMisses:()=>r,isAllSunk:()=>{const e=Object.values(o);let t=!1;return e.forEach((e=>{if(!1===e.getShip().sunk)return t=!1;t=!0})),t}}})(),isComp:!1}),r=e=>{e.board.createBoard();const t=e.board.getBoard(),r=e.number;let o=document.getElementById(`board${r}`);for(console.log(e.board.getBoard()),console.log(e.board.getShips().s_ship_I.getShip());o.lastElementChild;)o.removeChild(o.lastElementChild);for(let e=0;e<t.length;e++)for(let r=0;r<t.length;r++){const n=document.createElement("button");n.setAttribute("data-x",`${e}`),n.setAttribute("data-y",`${r}`),null===t[e][r]&&n.setAttribute("style","background-color: blue;"),o.appendChild(n)}return o},o=e=>{const t=e.board.getShips(),r=Object.keys(t),o=document.querySelector(`#player${e.number}-ships`);return r.forEach((e=>{const t=document.createElement("option");t.textContent=e,o.appendChild(t)})),o};let n=t("One"),l=t("Two");var s;n.board.getShips(),r(n),r(l),o(n),o(l),s=n,document.querySelector("#placeShipBtn").addEventListener("click",(e=>{e.preventDefault();const t=parseInt(document.querySelector(`#player${s.number}-y`).value),o=parseInt(document.querySelector(`#player${s.number}-x`).value),n=document.querySelector(`#player${s.number}-ships`).value,l=s.board.getShips()[n];s.board.placeShip(t,o,l),r(s)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,