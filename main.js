(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk}},t=()=>{let t=[],r=[],o=[],n={l_ship:e(4),m_ship_I:e(3),m_ship_II:e(3),s_ship_I:e(2),s_ship_II:e(2),s_ship_III:e(2),xs_ship_I:e(1),xs_ship_II:e(1),xs_ship_III:e(1),xs_ship_IV:e(1)};const a=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],a=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)n.push([e,l]),l+=1;else for(;a!==e+o;)n.push([a,t]),a+=1;return n},i=(e,r,o)=>{let n=[],i=!0;return r+length-1>9||e>9||e+length-1>9||r>9?alert("Ship is out of bound"):(n=l(e,r,o),i=a(n),!1===i?(i=!0,n=[],alert("square is already occupied")):(o.getShip().comp=n,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:i,getBoard:()=>t,getShips:()=>n,receiveAttack:(e,n)=>(null===t[e][n]?r.push([e,n]):(o.push([e,n]),t[e][n].hit(),t[e][n].getShip().hitCoor.push([e,n])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(n);let t=!0;return e.forEach((e=>{if(!e.isSunk())return t=!1})),t},populateBd:()=>{const e=Object.keys(n),r=["horizontal","vertical"];return e.forEach((e=>{const t=n[e],o=t.getShip().length;let s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),d=Math.floor(2*Math.random());t.getShip().orientation=r[d];let c=l(s,u,t),h=a(c);for(;u+o-1>9||s+o-1>9||!1===h;)s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),d=Math.floor(2*Math.random()),t.getShip().orientation=r[d],c=l(s,u,t),h=a(c);i(s,u,t)})),t}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const a=e.board.getMisses();null===t?a.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],a=o[0][1];e.board.placeShip(n,a,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let a=0;a<t.length;a++)for(let l=0;l<t.length;l++){const i=document.createElement("div");i.classList.add(`${r}-square`),i.setAttribute("data-x",`${a}`),i.setAttribute("data-y",`${l}`),o(e,t[a][l],i,a,l),n.appendChild(i)}return n},a=(e,t)=>{let r;"playerOne-form"===document.querySelector("form").getAttribute("id")?r=e.board.getShips():t.board.getShips();const o=Object.keys(r),n=document.querySelector("#ships");return o.forEach((e=>{const t=document.createElement("option");t.textContent=e,n.appendChild(t)})),n},l=(e,t)=>{document.querySelector("#placeShipBtn").addEventListener("click",(r=>{r.preventDefault();let o=document.querySelector("form").getAttribute("id");const a=parseInt(document.querySelector("#y-coor").value),l=parseInt(document.querySelector("#x-coor").value),i=document.querySelector("#ships").value,s=document.querySelector("#orientation").value;let u;u="playerOne-form"===o?e.board.getShips()[i]:t.board.getShips()[i],u.getShip().orientation=s,Number.isNaN(a)||Number.isNaN(l)||("playerOne-form"===o?(e.board.placeShip(a,l,u),n(e)):(t.board.placeShip(a,l,u),n(t)))}))},i=(e,t)=>{const r=document.querySelector("main"),o=document.querySelector("#finBtn"),n=document.querySelector("form");let a=!1;o.addEventListener("click",(o=>{let l;o.preventDefault();const i=r.getAttribute("class");let u=n.getAttribute("id");l="playerOne-form"===u?e.board.getShips():t.board.getShips(),Object.values(l).forEach((e=>{const t=e.getShip().comp;return a=0!==t.length})),a?("playerOne-form"===u&&(n.setAttribute("id","playerTwo-form"),s(e)),("pvc"===i||"playerTwo-form"===u)&&(n.setAttribute("style","display: none;"),s(t),document.querySelector(".dialog").showModal())):alert("Please place all the ships first")}))},s=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},u=(e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),a=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(l=>{l.preventDefault();let i=a.getAttribute("data-id");if("player-Two"===i)return n(e),d(t),a.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===i){const l=r.getAttribute("class");return a.setAttribute("data-id",`player-${t.number}`),"pvc"===l?(h(e,t),o.close()):(n(t),d(e),o.close())}}))},d=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let a=0;a<t.length;a++){const l=t[n][a],i=document.createElement("button");i.classList.add(`${e.number}-square`),i.setAttribute("data-x",`${n}`),i.setAttribute("data-y",`${a}`),c(e,i),null!==l&&l.getShip().hitCount>0&&l.getShip().hitCoor.find((e=>e[0]===n&&e[1]===a))&&(i.setAttribute("style","background-color: red;"),i.setAttribute("disabled","")),r.find((e=>e[0]===n&&e[1]===a))&&(i.setAttribute("style","background-color: green;"),i.setAttribute("disabled","")),o.appendChild(i)}},c=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),a=parseInt(t.getAttribute("data-x")),l=parseInt(t.getAttribute("data-y")),i=document.querySelector(".player"),u=document.querySelector(".end-game");t.addEventListener("click",(d=>{d.preventDefault(),r.receiveAttack(a,l),null===o[a][l]?(s(e),t.setAttribute("style","background-color: red;"),n.showModal()):(t.setAttribute("style","background-color: green;"),e.board.isAllSunk()&&(u.showModal(),"One"===e.number?i.textContent="Congratulations Player Two!":i.textContent="Congratulations Player One!"))}))},h=(e,t)=>{const r=e.board,o=r.getBoard(),a=r.getMisses(),l=r.getHits(),i=document.querySelector("#play-window");let s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random()),c=!0;for(;!0===c;)a.find((e=>e[0]===s&&e[1]===u))||l.find((e=>e[0]===s&&e[1]===u))?(s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random())):(r.receiveAttack(s,u),null===o[s][u]?(i.setAttribute("data-id",`player-${e.number}`),n(e),d(t),c=!1):(s=Math.floor(10*Math.random()),u=Math.floor(10*Math.random())))},p=document.querySelector(".game_mode"),m=document.querySelector("#pvp"),b=document.querySelector("#pvc"),g=r("One"),y=r("Two");m.addEventListener("click",(e=>(e.preventDefault(),n(g),n(y),a(g,y),l(g,y),i(g,y),u(g,y),p.close()))),b.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main");var r;return n(g),n(y),a(g,y),l(g,y),i(g,y),u(g,y),(r=y).board.populateBd(),n(r),s(r),t.classList.add("pvc"),p.close()})),document.addEventListener("onload",p.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,