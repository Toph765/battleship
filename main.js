(()=>{"use strict";const e=e=>{let t={};return t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],{getShip:()=>t,hit:()=>{t.hitCount+=1,t.hitCount===t.length&&(t.sunk=!0)},isSunk:()=>!0===t.sunk,resetShip:()=>(t.length=e,t.hitCount=0,t.sunk=!1,t.orientation="horizontal",t.comp=[],t.hitCoor=[],t)}},t=()=>{let t=[],r=[],o=[],n={battleship:e(4),cruiser_I:e(3),cruiser_II:e(3),destroyer_I:e(2),destroyer_II:e(2),destroyer_III:e(2),submarine_I:e(1),submarine_II:e(1),submarine_III:e(1),submarine_IV:e(1)};const a=e=>{let r=!0;return e.forEach((e=>{if(e[0]>9||e[1]>9||(o=e[0],n=e[1],null!==t[o][n]))return r=!1;var o,n})),r},l=(e,t,r)=>{const o=r.getShip().length;let n=[],a=e,l=t;if("horizontal"===r.getShip().orientation)for(;l!==t+o;)n.push([e,l]),l+=1;else for(;a!==e+o;)n.push([a,t]),a+=1;return n},u=(e,r,o)=>{let n=[],u=!0;return r+length-1>9||e>9||e+length-1>9||r>9?alert("Ship is out of bound"):(n=l(e,r,o),u=a(n),!1===u?(u=!0,n=[],alert("square is already occupied")):(o.getShip().comp=n,o.getShip().comp.forEach((e=>{t[e[0]][e[1]]=o})),t))};return{createBoard:()=>{for(let e=0;e<10;e++){t[e]=[];for(let r=0;r<10;r++)t[e][r]=null}return t},placeShip:u,getBoard:()=>t,getShips:()=>n,receiveAttack:(e,n)=>(null===t[e][n]?r.push([e,n]):(o.push([e,n]),t[e][n].hit(),t[e][n].getShip().hitCoor.push([e,n])),t),getMisses:()=>r,getHits:()=>o,isAllSunk:()=>{const e=Object.values(n);let t=!0;return e.forEach((e=>{if(!e.isSunk())return t=!1})),t},populateBd:()=>{const e=Object.keys(n),r=["horizontal","vertical"];return e.forEach((e=>{const t=n[e],o=t.getShip().length;let i=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),c=Math.floor(2*Math.random());t.getShip().orientation=r[c];let s=l(i,d,t),h=a(s);for(;d+o-1>9||i+o-1>9||!1===h;)i=Math.floor(10*Math.random()),d=Math.floor(10*Math.random()),c=Math.floor(2*Math.random()),t.getShip().orientation=r[c],s=l(i,d,t),h=a(s);u(i,d,t)})),t},resetBoard:()=>{const e=Object.keys(n);t=[],r=[],o=[],e.forEach((e=>{n[e].resetShip()}))}}},r=e=>({number:e,win:!1,board:t(),isComp:!1}),o=(e,t,r,o,n)=>{const a=e.board.getMisses();null===t?a.find((e=>e[0]===o&&e[1]===n))?r.setAttribute("style","background-color: yellow;"):r.setAttribute("style","background-color: blue;"):t.getShip().hitCoor.find((e=>e[0]===o&&e[1]===n))&&r.setAttribute("style","background-color: red;")},n=e=>{e.board.createBoard(),(e=>{e.board.getBoard();const t=e.board.getShips();Object.keys(t).forEach((r=>{const o=t[r].getShip().comp;if(0!==o.length){const n=o[0][0],a=o[0][1];e.board.placeShip(n,a,t[r])}}))})(e);const t=e.board.getBoard(),r=e.number;let n=document.getElementById(`board${r}`);for(;n.lastElementChild;)n.removeChild(n.lastElementChild);for(let a=0;a<t.length;a++)for(let l=0;l<t.length;l++){const u=document.createElement("div");u.classList.add(`${r}-square`),u.setAttribute("data-x",`${a}`),u.setAttribute("data-y",`${l}`),o(e,t[a][l],u,a,l),n.appendChild(u)}return n},a=e=>{document.querySelectorAll(`.${e.number}-square`).forEach((e=>{e.setAttribute("disabled",""),e.setAttribute("style","background-color: gray;")}))},l=e=>{const t=e.board.getBoard(),r=e.board.getMisses(),o=document.querySelector(`#board${e.number}`);for(;o.lastElementChild;)o.removeChild(o.lastElementChild);for(let n=0;n<t.length;n++)for(let a=0;a<t.length;a++){const l=t[n][a],i=document.createElement("button");i.classList.add(`${e.number}-square`),i.setAttribute("data-x",`${n}`),i.setAttribute("data-y",`${a}`),u(e,i),null!==l&&l.getShip().hitCount>0&&l.getShip().hitCoor.find((e=>e[0]===n&&e[1]===a))&&(i.setAttribute("style","background-color: red;"),i.setAttribute("disabled","")),r.find((e=>e[0]===n&&e[1]===a))&&(i.setAttribute("style","background-color: green;"),i.setAttribute("disabled","")),o.appendChild(i)}},u=(e,t)=>{const r=e.board,o=r.getBoard(),n=document.querySelector(".dialog"),l=parseInt(t.getAttribute("data-x")),u=parseInt(t.getAttribute("data-y")),i=document.querySelector(".winner"),d=document.querySelector(".end-game"),c=document.querySelector("#play-window"),s=document.querySelector(".player-name");t.addEventListener("click",(h=>{h.preventDefault();const m=c.getAttribute("data-id");r.receiveAttack(l,u),null===o[l][u]?(a(e),t.setAttribute("style","background-color: yellow;"),s.textContent="player-One"===m?"Player Two`s turn!":"Player One`s turn!",n.showModal()):(t.setAttribute("style","background-color: red;"),e.board.isAllSunk()&&(t.setAttribute("style","background-color: red;"),d.showModal(),"One"===e.number?i.textContent="Congratulations Player Two!":i.textContent="Congratulations Player One!"))}))},i=document.querySelector(".game_mode"),d=document.querySelector("#pvp"),c=document.querySelector("#pvc"),s=document.querySelectorAll(".restart"),h=document.querySelector(".end-game"),m=document.querySelector("form");let p=r("One"),b=r("Two");var y,g;y=p,g=b,document.querySelector("#placeShipBtn").addEventListener("click",(e=>{e.preventDefault();let t=document.querySelector("form").getAttribute("id");const r=parseInt(document.querySelector("#y-coor").value),o=parseInt(document.querySelector("#x-coor").value),a=document.querySelector("#ships").value,l=document.querySelector("#orientation").value;let u;u="playerOne-form"===t?y.board.getShips()[a]:g.board.getShips()[a],u.getShip().orientation=l,Number.isNaN(r)||Number.isNaN(o)||("playerOne-form"===t?(y.board.placeShip(r,o,u),n(y)):(g.board.placeShip(r,o,u),n(g)))})),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector("#finBtn"),n=document.querySelector("form");let l=!1;o.addEventListener("click",(o=>{let u;o.preventDefault();const i=r.getAttribute("class");let d=n.getAttribute("id");u="playerOne-form"===d?e.board.getShips():t.board.getShips(),Object.values(u).forEach((e=>{const t=e.getShip().comp;return l=0!==t.length})),l?("playerOne-form"===d&&(n.setAttribute("id","playerTwo-form"),a(e)),("pvc"===i||"playerTwo-form"===d)&&(n.setAttribute("style","display: none;"),a(t),document.querySelector(".dialog").showModal())):alert("Please place all the ships first")}))})(p,b),((e,t)=>{const r=document.querySelector("main"),o=document.querySelector(".dialog"),a=document.querySelector("#play-window");document.querySelector("#play").addEventListener("click",(u=>{u.preventDefault();let i=a.getAttribute("data-id");if("player-Two"===i)return n(e),l(t),a.setAttribute("data-id",`player-${e.number}`),o.close();if("player-One"===i){const u=r.getAttribute("class");return a.setAttribute("data-id",`player-${t.number}`),"pvc"===u?(((e,t)=>{const r=e.board,o=r.getBoard(),a=r.getMisses(),u=r.getHits(),i=document.querySelector("#play-window"),d=document.querySelector(".winner"),c=document.querySelector(".end-game");let s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random()),m=!0;for(;!0===m;)a.find((e=>e[0]===s&&e[1]===h))||u.find((e=>e[0]===s&&e[1]===h))?(s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random())):(r.receiveAttack(s,h),null===o[s][h]?(i.setAttribute("data-id",`player-${e.number}`),n(e),l(t),m=!1):e.board.isAllSunk()?(m=!1,c.showModal(),d.textContent="Computer won!"):(s=Math.floor(10*Math.random()),h=Math.floor(10*Math.random())))})(e,t),o.close()):(n(t),l(e),o.close())}}))})(p,b),d.addEventListener("click",(e=>(e.preventDefault(),n(p),n(b),i.close()))),c.addEventListener("click",(e=>{e.preventDefault();const t=document.querySelector("main");var r;return n(p),n(b),(r=b).board.populateBd(),n(r),a(r),t.classList.add("pvc"),i.close()})),s.forEach((e=>e.addEventListener("click",(e=>{e.preventDefault(),h.close(),m.setAttribute("id","playerOne-form"),m.removeAttribute("style"),p.board.resetBoard(),b.board.resetBoard(),i.showModal()})))),document.addEventListener("onload",i.showModal())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxVQUNwQjNCLEVBQUl5QixLQUFLQyxNQUFzQixHQUFoQkQsS0FBS0UsV0FHMUIsRUFoSk00RSxDQUFRUCxFQUFNQyxHQUNQakMsRUFBT21DLFVBRWQxRCxFQUFZd0QsR0FDWnRDLEVBQWFxQyxHQUNOaEMsRUFBT21DLFFBRWxCLElBQ0EsRUNwS0pLLENBQVl2QixFQUFXQyxHQUV2QkosRUFBT1AsaUJBQWlCLFNBQVVDLElBQ2hDQSxFQUFFQyxpQkFDRmhDLEVBQVl3QyxHQUNaeEMsRUFBWXlDLEdBRUxMLEVBQVNzQixXQUdsQnBCLEVBQU9SLGlCQUFpQixTQUFVQyxJQUNoQ0EsRUFBRUMsaUJBQ0YsTUFBTWlCLEVBQU8xQyxTQUFTYSxjQUFjLFFEK09yQixJQUFDekIsRUN0T2hCLE9BUEFLLEVBQVl3QyxHQUNaeEMsRUFBWXlDLElENE9JOUMsRUMxT1A4QyxHRDJPRnRHLE1BQU15QyxhQUNib0IsRUFBWUwsR0FDWnFCLEVBQVVyQixHQzNPVnNELEVBQUtwQyxVQUFVQyxJQUFJLE9BRVpzQixFQUFTc0IsT0FBTyxJQUd6Qm5CLEVBQVduRixTQUFTOEYsR0FDbEJBLEVBQU9wQixpQkFBaUIsU0FBVUMsSUFDaENBLEVBQUVDLGlCQUVGTCxFQUFPK0IsUUFDUCxFQUFLM0QsYUFBYSxLQUFNLGtCQUN4QixFQUFLaUUsZ0JBQWdCLFNBRXJCeEIsRUFBVXJHLE1BQU1rRCxhQUNoQm9ELEVBQVV0RyxNQUFNa0QsYUFDaEIrQyxFQUFTRCxXQUFXLE1BSXhCNUIsU0FBU3VCLGlCQUFpQixTQUFVTSxFQUFTRCxZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcGxhdGUvLi9zcmMvc2hpcC5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS8uL3NyYy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUvLi9zcmMvcGxheWVyLmpzIiwid2VicGFjazovL3RlbXBsYXRlLy4vc3JjL0RPTS5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTaGlwID0gKG4pID0+IHtcbiAgbGV0IHNoaXBPYmogPSB7fTtcblxuICBzaGlwT2JqW1wibGVuZ3RoXCJdID0gbjtcbiAgc2hpcE9ialtcImhpdENvdW50XCJdID0gMDtcbiAgc2hpcE9ialtcInN1bmtcIl0gPSBmYWxzZTtcbiAgc2hpcE9ialtcIm9yaWVudGF0aW9uXCJdID0gXCJob3Jpem9udGFsXCI7XG4gIHNoaXBPYmpbXCJjb21wXCJdID0gW107XG4gIHNoaXBPYmpbXCJoaXRDb29yXCJdID0gW107XG5cbiAgY29uc3QgZ2V0U2hpcCA9ICgpID0+IHNoaXBPYmo7XG5cbiAgY29uc3QgaGl0ID0gKCkgPT4ge1xuICAgIHNoaXBPYmouaGl0Q291bnQgKz0gMTtcbiAgICBpZiAoc2hpcE9iai5oaXRDb3VudCA9PT0gc2hpcE9iai5sZW5ndGgpIHNoaXBPYmouc3VuayA9IHRydWU7XG4gIH07XG5cbiAgY29uc3QgaXNTdW5rID0gKCkgPT4ge1xuICAgIHJldHVybiBzaGlwT2JqLnN1bmsgPT09IHRydWUgPyB0cnVlIDogZmFsc2U7XG4gIH07XG5cbiAgY29uc3QgcmVzZXRTaGlwID0gKCkgPT4ge1xuICAgIHNoaXBPYmoubGVuZ3RoID0gbjtcbiAgICBzaGlwT2JqLmhpdENvdW50ID0gMDtcbiAgICBzaGlwT2JqLnN1bmsgPSBmYWxzZTtcbiAgICBzaGlwT2JqLm9yaWVudGF0aW9uID0gXCJob3Jpem9udGFsXCI7XG4gICAgc2hpcE9iai5jb21wID0gW107XG4gICAgc2hpcE9iai5oaXRDb29yID0gW107XG5cbiAgICByZXR1cm4gc2hpcE9iajtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGdldFNoaXAsXG4gICAgaGl0LFxuICAgIGlzU3VuayxcbiAgICByZXNldFNoaXAsXG4gIH07XG59O1xuXG5leHBvcnQgeyBTaGlwIH07XG4iLCJpbXBvcnQgeyBTaGlwIH0gZnJvbSBcIi4vc2hpcFwiO1xuXG5jb25zdCBHYW1lYm9hcmQgPSAoKSA9PiB7XG4gIGxldCBib2FyZCA9IFtdO1xuICBsZXQgbWlzc2VzID0gW107XG4gIGxldCBoaXRzID0gW107XG5cbiAgbGV0IGFsbFNoaXBzID0ge1xuICAgIGJhdHRsZXNoaXA6IFNoaXAoNCksXG4gICAgY3J1aXNlcl9JOiBTaGlwKDMpLFxuICAgIGNydWlzZXJfSUk6IFNoaXAoMyksXG4gICAgZGVzdHJveWVyX0k6IFNoaXAoMiksXG4gICAgZGVzdHJveWVyX0lJOiBTaGlwKDIpLFxuICAgIGRlc3Ryb3llcl9JSUk6IFNoaXAoMiksXG4gICAgc3VibWFyaW5lX0k6IFNoaXAoMSksXG4gICAgc3VibWFyaW5lX0lJOiBTaGlwKDEpLFxuICAgIHN1Ym1hcmluZV9JSUk6IFNoaXAoMSksXG4gICAgc3VibWFyaW5lX0lWOiBTaGlwKDEpLFxuICB9O1xuXG4gIGNvbnN0IGdldEJvYXJkID0gKCkgPT4gYm9hcmQ7XG4gIGNvbnN0IGdldE1pc3NlcyA9ICgpID0+IG1pc3NlcztcbiAgY29uc3QgZ2V0U2hpcHMgPSAoKSA9PiBhbGxTaGlwcztcbiAgY29uc3QgZ2V0SGl0cyA9ICgpID0+IGhpdHM7XG5cbiAgY29uc3QgY3JlYXRlQm9hcmQgPSAoKSA9PiB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG4gICAgICBib2FyZFtpXSA9IFtdO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaisrKSB7XG4gICAgICAgIGJvYXJkW2ldW2pdID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYm9hcmQ7XG4gIH07XG5cbiAgY29uc3QgaXNFbXB0eSA9ICh4LCB5KSA9PiB7XG4gICAgcmV0dXJuIGJvYXJkW3hdW3ldID09PSBudWxsID8gdHJ1ZSA6IGZhbHNlO1xuICB9O1xuXG4gIGNvbnN0IGlzRml0ID0gKGFycikgPT4ge1xuICAgIGxldCBzdGF0dXMgPSB0cnVlO1xuXG4gICAgYXJyLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGlmIChpdGVtWzBdID4gOSB8fCBpdGVtWzFdID4gOSB8fCAhaXNFbXB0eShpdGVtWzBdLCBpdGVtWzFdKSlcbiAgICAgICAgcmV0dXJuIChzdGF0dXMgPSBmYWxzZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gc3RhdHVzO1xuICB9O1xuXG4gIGNvbnN0IGNyZWF0ZUNvbXAgPSAoeCwgeSwgc2hpcCkgPT4ge1xuICAgIGNvbnN0IGxlbmd0aCA9IHNoaXAuZ2V0U2hpcCgpLmxlbmd0aDtcbiAgICBjb25zdCBvcmllbnRhdGlvbiA9IHNoaXAuZ2V0U2hpcCgpLm9yaWVudGF0aW9uO1xuICAgIGxldCB0ZW1wID0gW107XG4gICAgbGV0IGEgPSB4O1xuICAgIGxldCBiID0geTtcblxuICAgIGlmIChvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgIHdoaWxlIChiICE9PSB5ICsgbGVuZ3RoKSB7XG4gICAgICAgIHRlbXAucHVzaChbeCwgYl0pO1xuICAgICAgICBiICs9IDE7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlIChhICE9PSB4ICsgbGVuZ3RoKSB7XG4gICAgICAgIHRlbXAucHVzaChbYSwgeV0pO1xuICAgICAgICBhICs9IDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRlbXA7XG4gIH07XG5cbiAgY29uc3QgcGxhY2VTaGlwID0gKHgsIHksIHNoaXApID0+IHtcbiAgICBsZXQgdGVtcCA9IFtdO1xuICAgIGxldCBzdGF0dXMgPSB0cnVlO1xuXG4gICAgaWYgKHkgKyBsZW5ndGggLSAxID4gOSB8fCB4ID4gOSB8fCB4ICsgbGVuZ3RoIC0gMSA+IDkgfHwgeSA+IDkpIHtcbiAgICAgIHJldHVybiBhbGVydChcIlNoaXAgaXMgb3V0IG9mIGJvdW5kXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0ZW1wID0gY3JlYXRlQ29tcCh4LCB5LCBzaGlwKTtcbiAgICAgIHN0YXR1cyA9IGlzRml0KHRlbXApO1xuICAgIH1cblxuICAgIGlmIChzdGF0dXMgPT09IGZhbHNlKSB7XG4gICAgICBzdGF0dXMgPSB0cnVlO1xuICAgICAgdGVtcCA9IFtdO1xuICAgICAgcmV0dXJuIGFsZXJ0KFwic3F1YXJlIGlzIGFscmVhZHkgb2NjdXBpZWRcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNoaXAuZ2V0U2hpcCgpLmNvbXAgPSB0ZW1wO1xuXG4gICAgICBzaGlwLmdldFNoaXAoKS5jb21wLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgYm9hcmRbaXRlbVswXV1baXRlbVsxXV0gPSBzaGlwO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJvYXJkO1xuICB9O1xuXG4gIGNvbnN0IHBvcHVsYXRlQmQgPSAoKSA9PiB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFsbFNoaXBzKTtcbiAgICBjb25zdCBkaXJlY3Rpb25zID0gW1wiaG9yaXpvbnRhbFwiLCBcInZlcnRpY2FsXCJdO1xuXG4gICAga2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IHNoaXAgPSBhbGxTaGlwc1trZXldO1xuICAgICAgY29uc3QgbGVuZ3RoID0gc2hpcC5nZXRTaGlwKCkubGVuZ3RoO1xuXG4gICAgICBsZXQgeCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgICAgIGxldCB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgbGV0IHogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcblxuICAgICAgc2hpcC5nZXRTaGlwKCkub3JpZW50YXRpb24gPSBkaXJlY3Rpb25zW3pdO1xuICAgICAgbGV0IHRlbXAgPSBjcmVhdGVDb21wKHgsIHksIHNoaXApO1xuICAgICAgbGV0IGZpdCA9IGlzRml0KHRlbXApO1xuXG4gICAgICB3aGlsZSAoeSArIGxlbmd0aCAtIDEgPiA5IHx8IHggKyBsZW5ndGggLSAxID4gOSB8fCBmaXQgPT09IGZhbHNlKSB7XG4gICAgICAgIHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgICAgIHkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgICAgIHogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcblxuICAgICAgICBzaGlwLmdldFNoaXAoKS5vcmllbnRhdGlvbiA9IGRpcmVjdGlvbnNbel07XG4gICAgICAgIHRlbXAgPSBjcmVhdGVDb21wKHgsIHksIHNoaXApO1xuICAgICAgICBmaXQgPSBpc0ZpdCh0ZW1wKTtcbiAgICAgIH1cblxuICAgICAgcGxhY2VTaGlwKHgsIHksIHNoaXApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGJvYXJkO1xuICB9O1xuXG4gIGNvbnN0IHJlY2VpdmVBdHRhY2sgPSAoeCwgeSkgPT4ge1xuICAgIGlmIChib2FyZFt4XVt5XSA9PT0gbnVsbCkgbWlzc2VzLnB1c2goW3gsIHldKTtcbiAgICBlbHNlIHtcbiAgICAgIGhpdHMucHVzaChbeCwgeV0pO1xuICAgICAgYm9hcmRbeF1beV0uaGl0KCk7XG4gICAgICBib2FyZFt4XVt5XS5nZXRTaGlwKCkuaGl0Q29vci5wdXNoKFt4LCB5XSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJvYXJkO1xuICB9O1xuXG4gIGNvbnN0IGlzQWxsU3VuayA9ICgpID0+IHtcbiAgICBjb25zdCBzaGlwcyA9IE9iamVjdC52YWx1ZXMoYWxsU2hpcHMpO1xuICAgIGxldCBzdGF0dXMgPSB0cnVlO1xuXG4gICAgc2hpcHMuZm9yRWFjaCgoc2hpcCkgPT4ge1xuICAgICAgaWYgKCFzaGlwLmlzU3VuaygpKSB7XG4gICAgICAgIHJldHVybiAoc3RhdHVzID0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHN0YXR1cztcbiAgfTtcblxuICBjb25zdCByZXNldEJvYXJkID0gKCkgPT4ge1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhhbGxTaGlwcyk7XG4gICAgYm9hcmQgPSBbXTtcbiAgICBtaXNzZXMgPSBbXTtcbiAgICBoaXRzID0gW107XG5cbiAgICBrZXlzLmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgIGFsbFNoaXBzW3NoaXBdLnJlc2V0U2hpcCgpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgY3JlYXRlQm9hcmQsXG4gICAgcGxhY2VTaGlwLFxuICAgIGdldEJvYXJkLFxuICAgIGdldFNoaXBzLFxuICAgIHJlY2VpdmVBdHRhY2ssXG4gICAgZ2V0TWlzc2VzLFxuICAgIGdldEhpdHMsXG4gICAgaXNBbGxTdW5rLFxuICAgIHBvcHVsYXRlQmQsXG4gICAgcmVzZXRCb2FyZCxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IEdhbWVib2FyZCB9O1xuIiwiaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSBcIi4vZ2FtZWJvYXJkXCI7XG5cbmNvbnN0IFBsYXllciA9IChudW1iZXIpID0+IHtcbiAgbGV0IHdpbiA9IGZhbHNlO1xuICBsZXQgYm9hcmQgPSBHYW1lYm9hcmQoKTtcbiAgbGV0IGlzQ29tcCA9IGZhbHNlO1xuXG4gIHJldHVybiB7XG4gICAgbnVtYmVyLFxuICAgIHdpbixcbiAgICBib2FyZCxcbiAgICBpc0NvbXAsXG4gIH07XG59O1xuXG5leHBvcnQgeyBQbGF5ZXIgfTtcbiIsImNvbnN0IGZpbGxTcXIgPSAocGxheWVyLCBzcXIsIHRhZywgeCwgeSkgPT4ge1xuICBjb25zdCBtaXNzZXMgPSBwbGF5ZXIuYm9hcmQuZ2V0TWlzc2VzKCk7XG5cbiAgaWYgKHNxciA9PT0gbnVsbCkge1xuICAgIGlmIChcbiAgICAgIG1pc3Nlcy5maW5kKChpdGVtKSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtWzBdID09PSB4ICYmIGl0ZW1bMV0gPT09IHk7XG4gICAgICB9KVxuICAgICkge1xuICAgICAgdGFnLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1wiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFnLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcIik7XG4gICAgfVxuICB9IGVsc2UgaWYgKFxuICAgIHNxci5nZXRTaGlwKCkuaGl0Q29vci5maW5kKChpdGVtKSA9PiB7XG4gICAgICByZXR1cm4gaXRlbVswXSA9PT0geCAmJiBpdGVtWzFdID09PSB5O1xuICAgIH0pXG4gICkge1xuICAgIHRhZy5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcImJhY2tncm91bmQtY29sb3I6IHJlZDtcIik7XG4gIH1cbn07XG5cbmNvbnN0IHJlbmRlclNoaXAgPSAocGxheWVyKSA9PiB7XG4gIGxldCBib2FyZCA9IHBsYXllci5ib2FyZC5nZXRCb2FyZCgpO1xuICBjb25zdCBzaGlwc09iaiA9IHBsYXllci5ib2FyZC5nZXRTaGlwcygpO1xuICBjb25zdCBzaGlwc0xpc3QgPSBPYmplY3Qua2V5cyhzaGlwc09iaik7XG5cbiAgc2hpcHNMaXN0LmZvckVhY2goKHNoaXApID0+IHtcbiAgICBjb25zdCBjb21wID0gc2hpcHNPYmpbc2hpcF0uZ2V0U2hpcCgpLmNvbXA7XG5cbiAgICBpZiAoY29tcC5sZW5ndGggIT09IDApIHtcbiAgICAgIGNvbnN0IHhDb29yID0gY29tcFswXVswXTtcbiAgICAgIGNvbnN0IHlDb29yID0gY29tcFswXVsxXTtcbiAgICAgIHBsYXllci5ib2FyZC5wbGFjZVNoaXAoeENvb3IsIHlDb29yLCBzaGlwc09ialtzaGlwXSk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gYm9hcmQ7XG59O1xuXG5jb25zdCByZW5kZXJCb2FyZCA9IChwbGF5ZXIpID0+IHtcbiAgcGxheWVyLmJvYXJkLmNyZWF0ZUJvYXJkKCk7XG5cbiAgcmVuZGVyU2hpcChwbGF5ZXIpO1xuXG4gIGNvbnN0IGJvYXJkID0gcGxheWVyLmJvYXJkLmdldEJvYXJkKCk7XG4gIGNvbnN0IHBsYXllck51bSA9IHBsYXllci5udW1iZXI7XG4gIGxldCBjdXJyZW50Qm9hcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgYm9hcmQke3BsYXllck51bX1gKTtcblxuICB3aGlsZSAoY3VycmVudEJvYXJkLmxhc3RFbGVtZW50Q2hpbGQpXG4gICAgY3VycmVudEJvYXJkLnJlbW92ZUNoaWxkKGN1cnJlbnRCb2FyZC5sYXN0RWxlbWVudENoaWxkKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBib2FyZC5sZW5ndGg7IGorKykge1xuICAgICAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKGAke3BsYXllck51bX0tc3F1YXJlYCk7XG5cbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXhcIiwgYCR7aX1gKTtcbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXlcIiwgYCR7an1gKTtcblxuICAgICAgZmlsbFNxcihwbGF5ZXIsIGJvYXJkW2ldW2pdLCBzcXVhcmUsIGksIGopO1xuXG4gICAgICBjdXJyZW50Qm9hcmQuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY3VycmVudEJvYXJkO1xufTtcblxuY29uc3QgaW5pdFBsYWNlU2hpcCA9IChwT25lLCBwVHdvKSA9PiB7XG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwbGFjZVNoaXBCdG5gKTtcblxuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpO1xuICAgIGxldCBpZCA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiaWRcIik7XG5cbiAgICBjb25zdCB4Q29vciA9IHBhcnNlSW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCN5LWNvb3JgKS52YWx1ZSk7XG4gICAgY29uc3QgeUNvb3IgPSBwYXJzZUludChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjeC1jb29yYCkudmFsdWUpO1xuICAgIGNvbnN0IHNoaXBOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3NoaXBzYCkudmFsdWU7XG5cbiAgICBjb25zdCBvcmllbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjb3JpZW50YXRpb25gKS52YWx1ZTtcblxuICAgIGxldCBzaGlwO1xuICAgIGlkID09PSBcInBsYXllck9uZS1mb3JtXCJcbiAgICAgID8gKHNoaXAgPSBwT25lLmJvYXJkLmdldFNoaXBzKClbc2hpcE5hbWVdKVxuICAgICAgOiAoc2hpcCA9IHBUd28uYm9hcmQuZ2V0U2hpcHMoKVtzaGlwTmFtZV0pO1xuXG4gICAgc2hpcC5nZXRTaGlwKCkub3JpZW50YXRpb24gPSBvcmllbnQ7XG5cbiAgICBpZiAoTnVtYmVyLmlzTmFOKHhDb29yKSB8fCBOdW1iZXIuaXNOYU4oeUNvb3IpKSByZXR1cm47XG4gICAgZWxzZSB7XG4gICAgICBpZiAoaWQgPT09IFwicGxheWVyT25lLWZvcm1cIikge1xuICAgICAgICBwT25lLmJvYXJkLnBsYWNlU2hpcCh4Q29vciwgeUNvb3IsIHNoaXApO1xuICAgICAgICByZW5kZXJCb2FyZChwT25lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBUd28uYm9hcmQucGxhY2VTaGlwKHhDb29yLCB5Q29vciwgc2hpcCk7XG4gICAgICAgIHJlbmRlckJvYXJkKHBUd28pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG5jb25zdCBpbml0RmluU2V0dXAgPSAocE9uZSwgcFR3bykgPT4ge1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIm1haW5cIik7XG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNmaW5CdG5gKTtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGZvcm1gKTtcblxuICBsZXQgaXNBbGxQbGFjZWQgPSBmYWxzZTtcblxuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IHNoaXBzT2JqO1xuICAgIGNvbnN0IG1vZGUgPSBtYWluLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpO1xuICAgIGxldCBpZCA9IGZvcm0uZ2V0QXR0cmlidXRlKFwiaWRcIik7XG5cbiAgICBpZCA9PT0gXCJwbGF5ZXJPbmUtZm9ybVwiXG4gICAgICA/IChzaGlwc09iaiA9IHBPbmUuYm9hcmQuZ2V0U2hpcHMoKSlcbiAgICAgIDogKHNoaXBzT2JqID0gcFR3by5ib2FyZC5nZXRTaGlwcygpKTtcblxuICAgIGNvbnN0IHNoaXBzID0gT2JqZWN0LnZhbHVlcyhzaGlwc09iaik7XG5cbiAgICBzaGlwcy5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICBjb25zdCBjb21wID0gc2hpcC5nZXRTaGlwKCkuY29tcDtcbiAgICAgIGlmIChjb21wLmxlbmd0aCA9PT0gMCkgcmV0dXJuIChpc0FsbFBsYWNlZCA9IGZhbHNlKTtcbiAgICAgIGVsc2UgcmV0dXJuIChpc0FsbFBsYWNlZCA9IHRydWUpO1xuICAgIH0pO1xuXG4gICAgaWYgKGlzQWxsUGxhY2VkKSB7XG4gICAgICBpZiAoaWQgPT09IFwicGxheWVyT25lLWZvcm1cIikge1xuICAgICAgICBmb3JtLnNldEF0dHJpYnV0ZShcImlkXCIsIFwicGxheWVyVHdvLWZvcm1cIik7XG4gICAgICAgIGhpZGVCb2FyZChwT25lKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZGUgPT09IFwicHZjXCIgfHwgaWQgPT09IFwicGxheWVyVHdvLWZvcm1cIikge1xuICAgICAgICBmb3JtLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiZGlzcGxheTogbm9uZTtcIik7XG4gICAgICAgIGhpZGVCb2FyZChwVHdvKTtcbiAgICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kaWFsb2dcIik7XG4gICAgICAgIGRpYWxvZy5zaG93TW9kYWwoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYWxlcnQoXCJQbGVhc2UgcGxhY2UgYWxsIHRoZSBzaGlwcyBmaXJzdFwiKTtcbiAgICB9XG4gIH0pO1xufTtcblxuY29uc3QgaGlkZUJvYXJkID0gKHBsYXllcikgPT4ge1xuICBsZXQgc3F1YXJlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC4ke3BsYXllci5udW1iZXJ9LXNxdWFyZWApO1xuXG4gIHNxdWFyZXMuZm9yRWFjaCgoc3F1YXJlKSA9PiB7XG4gICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcImJhY2tncm91bmQtY29sb3I6IGdyYXk7XCIpO1xuICB9KTtcbn07XG5cbmNvbnN0IGluaXRwbGF5QnRuID0gKFBPbmUsIFBUd28pID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRpYWxvZ1wiKTtcbiAgY29uc3QgcGxheVdpbmRvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGxheS13aW5kb3dcIik7XG4gIGNvbnN0IHBsYXlCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsYXlcIik7XG5cbiAgcGxheUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgbGV0IHBsYXllciA9IHBsYXlXaW5kb3cuZ2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiKTtcblxuICAgIGlmIChwbGF5ZXIgPT09IFwicGxheWVyLVR3b1wiKSB7XG4gICAgICByZW5kZXJCb2FyZChQT25lKTtcbiAgICAgIHJlbmRlclBsYXlCZChQVHdvKTtcbiAgICAgIHBsYXlXaW5kb3cuc2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiLCBgcGxheWVyLSR7UE9uZS5udW1iZXJ9YCk7XG4gICAgICByZXR1cm4gZGlhbG9nLmNsb3NlKCk7XG4gICAgfSBlbHNlIGlmIChwbGF5ZXIgPT09IFwicGxheWVyLU9uZVwiKSB7XG4gICAgICBjb25zdCBtb2RlID0gbWFpbi5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcbiAgICAgIHBsYXlXaW5kb3cuc2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiLCBgcGxheWVyLSR7UFR3by5udW1iZXJ9YCk7XG4gICAgICBpZiAobW9kZSA9PT0gXCJwdmNcIikge1xuICAgICAgICBhdXRvQXRrKFBPbmUsIFBUd28pO1xuICAgICAgICByZXR1cm4gZGlhbG9nLmNsb3NlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZW5kZXJCb2FyZChQVHdvKTtcbiAgICAgICAgcmVuZGVyUGxheUJkKFBPbmUpO1xuICAgICAgICByZXR1cm4gZGlhbG9nLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn07XG5cbmNvbnN0IHJlbmRlclBsYXlCZCA9IChwbGF5ZXIpID0+IHtcbiAgY29uc3QgYm9hcmQgPSBwbGF5ZXIuYm9hcmQuZ2V0Qm9hcmQoKTtcbiAgY29uc3QgbWlzc2VzID0gcGxheWVyLmJvYXJkLmdldE1pc3NlcygpO1xuICBjb25zdCBjdXJyQm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjYm9hcmQke3BsYXllci5udW1iZXJ9YCk7XG5cbiAgd2hpbGUgKGN1cnJCb2FyZC5sYXN0RWxlbWVudENoaWxkKVxuICAgIGN1cnJCb2FyZC5yZW1vdmVDaGlsZChjdXJyQm9hcmQubGFzdEVsZW1lbnRDaGlsZCk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBib2FyZC5sZW5ndGg7IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgYm9hcmQubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBib2FyZFtpXVtqXTtcblxuICAgICAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKGAke3BsYXllci5udW1iZXJ9LXNxdWFyZWApO1xuXG4gICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiZGF0YS14XCIsIGAke2l9YCk7XG4gICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiZGF0YS15XCIsIGAke2p9YCk7XG5cbiAgICAgIGluaXRTcXJCdG4ocGxheWVyLCBzcXVhcmUpO1xuXG4gICAgICBpZiAoXG4gICAgICAgIGl0ZW0gIT09IG51bGwgJiZcbiAgICAgICAgaXRlbS5nZXRTaGlwKCkuaGl0Q291bnQgPiAwICYmXG4gICAgICAgIGl0ZW0uZ2V0U2hpcCgpLmhpdENvb3IuZmluZCgoaXRlbSkgPT4ge1xuICAgICAgICAgIHJldHVybiBpdGVtWzBdID09PSBpICYmIGl0ZW1bMV0gPT09IGo7XG4gICAgICAgIH0pXG4gICAgICApIHtcbiAgICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogcmVkO1wiKTtcbiAgICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIG1pc3Nlcy5maW5kKChpdGVtKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGl0ZW1bMF0gPT09IGkgJiYgaXRlbVsxXSA9PT0gajtcbiAgICAgICAgfSlcbiAgICAgICkge1xuICAgICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcIik7XG4gICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcIlwiKTtcbiAgICAgIH1cblxuICAgICAgY3VyckJvYXJkLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfVxuICB9XG59O1xuXG5jb25zdCBpbml0U3FyQnRuID0gKHBsYXllciwgc3F1YXJlKSA9PiB7XG4gIGNvbnN0IGJvYXJkID0gcGxheWVyLmJvYXJkO1xuICBjb25zdCBib2FyZExpc3QgPSBib2FyZC5nZXRCb2FyZCgpO1xuICBjb25zdCBkaWFsb2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRpYWxvZ1wiKTtcbiAgY29uc3QgeCA9IHBhcnNlSW50KHNxdWFyZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXhcIikpO1xuICBjb25zdCB5ID0gcGFyc2VJbnQoc3F1YXJlLmdldEF0dHJpYnV0ZShcImRhdGEteVwiKSk7XG4gIGNvbnN0IHdpbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2lubmVyXCIpO1xuICBjb25zdCBlbmRNc2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVuZC1nYW1lXCIpO1xuICBjb25zdCB3aW5kb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsYXktd2luZG93XCIpO1xuICBjb25zdCBwbGF5ZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGF5ZXItbmFtZVwiKTtcblxuICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGlkID0gd2luZG93LmdldEF0dHJpYnV0ZShcImRhdGEtaWRcIik7XG5cbiAgICBib2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xuICAgIGlmIChib2FyZExpc3RbeF1beV0gPT09IG51bGwpIHtcbiAgICAgIGhpZGVCb2FyZChwbGF5ZXIpO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1wiKTtcbiAgICAgIGlkID09PSBcInBsYXllci1PbmVcIlxuICAgICAgICA/IChwbGF5ZXJOYW1lLnRleHRDb250ZW50ID0gXCJQbGF5ZXIgVHdvYHMgdHVybiFcIilcbiAgICAgICAgOiAocGxheWVyTmFtZS50ZXh0Q29udGVudCA9IFwiUGxheWVyIE9uZWBzIHR1cm4hXCIpO1xuICAgICAgZGlhbG9nLnNob3dNb2RhbCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwic3R5bGVcIiwgXCJiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XCIpO1xuXG4gICAgICBpZiAocGxheWVyLmJvYXJkLmlzQWxsU3VuaygpKSB7XG4gICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcImJhY2tncm91bmQtY29sb3I6IHJlZDtcIik7XG4gICAgICAgIGVuZE1zZy5zaG93TW9kYWwoKTtcbiAgICAgICAgaWYgKHBsYXllci5udW1iZXIgPT09IFwiT25lXCIpIHtcbiAgICAgICAgICB3aW5uZXIudGV4dENvbnRlbnQgPSBgQ29uZ3JhdHVsYXRpb25zIFBsYXllciBUd28hYDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5uZXIudGV4dENvbnRlbnQgPSBgQ29uZ3JhdHVsYXRpb25zIFBsYXllciBPbmUhYDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG5jb25zdCBjb21wTW9kZSA9IChwbGF5ZXIpID0+IHtcbiAgcGxheWVyLmJvYXJkLnBvcHVsYXRlQmQoKTtcbiAgcmVuZGVyQm9hcmQocGxheWVyKTtcbiAgaGlkZUJvYXJkKHBsYXllcik7XG59O1xuXG5jb25zdCBhdXRvQXRrID0gKHBsYXlPbmUsIHBsYXlUd28pID0+IHtcbiAgY29uc3QgYm9hcmQgPSBwbGF5T25lLmJvYXJkO1xuICBjb25zdCBib2FyZExpc3QgPSBib2FyZC5nZXRCb2FyZCgpO1xuICBjb25zdCBtaXNzZXMgPSBib2FyZC5nZXRNaXNzZXMoKTtcbiAgY29uc3QgaGl0cyA9IGJvYXJkLmdldEhpdHMoKTtcbiAgY29uc3QgcGxheVdpbmRvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGxheS13aW5kb3dcIik7XG4gIGNvbnN0IHdpbm5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2lubmVyXCIpO1xuICBjb25zdCBlbmRNc2cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVuZC1nYW1lXCIpO1xuICBsZXQgeCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgbGV0IHkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gIGxldCBjb250ID0gdHJ1ZTtcblxuICB3aGlsZSAoY29udCA9PT0gdHJ1ZSkge1xuICAgIGlmIChcbiAgICAgIG1pc3Nlcy5maW5kKChpdGVtKSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtWzBdID09PSB4ICYmIGl0ZW1bMV0gPT09IHk7XG4gICAgICB9KSB8fFxuICAgICAgaGl0cy5maW5kKChpdGVtKSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtWzBdID09PSB4ICYmIGl0ZW1bMV0gPT09IHk7XG4gICAgICB9KVxuICAgICkge1xuICAgICAgeCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgICAgIHkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBib2FyZC5yZWNlaXZlQXR0YWNrKHgsIHkpO1xuXG4gICAgaWYgKGJvYXJkTGlzdFt4XVt5XSA9PT0gbnVsbCkge1xuICAgICAgcGxheVdpbmRvdy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIsIGBwbGF5ZXItJHtwbGF5T25lLm51bWJlcn1gKTtcbiAgICAgIHJlbmRlckJvYXJkKHBsYXlPbmUpO1xuICAgICAgcmVuZGVyUGxheUJkKHBsYXlUd28pO1xuICAgICAgY29udCA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocGxheU9uZS5ib2FyZC5pc0FsbFN1bmsoKSkge1xuICAgICAgICBjb250ID0gZmFsc2U7XG4gICAgICAgIGVuZE1zZy5zaG93TW9kYWwoKTtcbiAgICAgICAgd2lubmVyLnRleHRDb250ZW50ID0gXCJDb21wdXRlciB3b24hXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgICB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IHsgcmVuZGVyQm9hcmQsIGluaXRQbGFjZVNoaXAsIGluaXRGaW5TZXR1cCwgaW5pdHBsYXlCdG4sIGNvbXBNb2RlIH07XG4iLCJpbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi9wbGF5ZXJcIjtcbmltcG9ydCB7XG4gIHJlbmRlckJvYXJkLFxuICBpbml0UGxhY2VTaGlwLFxuICBpbml0RmluU2V0dXAsXG4gIGluaXRwbGF5QnRuLFxuICBjb21wTW9kZSxcbn0gZnJvbSBcIi4vRE9NXCI7XG5cbmNvbnN0IGdhbWVNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5nYW1lX21vZGVcIik7XG5jb25zdCBwdnBCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3B2cFwiKTtcbmNvbnN0IHB2Y0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHZjXCIpO1xuY29uc3QgcmVzdGFydEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucmVzdGFydFwiKTtcbmNvbnN0IGVuZE1zZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZW5kLWdhbWVcIik7XG5jb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm1cIik7XG5sZXQgcGxheWVyT25lID0gUGxheWVyKFwiT25lXCIpO1xubGV0IHBsYXllclR3byA9IFBsYXllcihcIlR3b1wiKTtcblxuaW5pdFBsYWNlU2hpcChwbGF5ZXJPbmUsIHBsYXllclR3byk7XG5pbml0RmluU2V0dXAocGxheWVyT25lLCBwbGF5ZXJUd28pO1xuaW5pdHBsYXlCdG4ocGxheWVyT25lLCBwbGF5ZXJUd28pO1xuXG5wdnBCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgcmVuZGVyQm9hcmQocGxheWVyT25lKTtcbiAgcmVuZGVyQm9hcmQocGxheWVyVHdvKTtcblxuICByZXR1cm4gZ2FtZU1vZGUuY2xvc2UoKTtcbn0pO1xuXG5wdmNCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuXG4gIHJlbmRlckJvYXJkKHBsYXllck9uZSk7XG4gIHJlbmRlckJvYXJkKHBsYXllclR3byk7XG5cbiAgY29tcE1vZGUocGxheWVyVHdvKTtcblxuICBtYWluLmNsYXNzTGlzdC5hZGQoXCJwdmNcIik7XG5cbiAgcmV0dXJuIGdhbWVNb2RlLmNsb3NlKCk7XG59KTtcblxucmVzdGFydEJ0bi5mb3JFYWNoKChidXR0b24pID0+XG4gIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBlbmRNc2cuY2xvc2UoKTtcbiAgICBmb3JtLnNldEF0dHJpYnV0ZShcImlkXCIsIFwicGxheWVyT25lLWZvcm1cIik7XG4gICAgZm9ybS5yZW1vdmVBdHRyaWJ1dGUoXCJzdHlsZVwiKTtcblxuICAgIHBsYXllck9uZS5ib2FyZC5yZXNldEJvYXJkKCk7XG4gICAgcGxheWVyVHdvLmJvYXJkLnJlc2V0Qm9hcmQoKTtcbiAgICBnYW1lTW9kZS5zaG93TW9kYWwoKTtcbiAgfSlcbik7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxvYWRcIiwgZ2FtZU1vZGUuc2hvd01vZGFsKCkpO1xuIl0sIm5hbWVzIjpbIlNoaXAiLCJuIiwic2hpcE9iaiIsImdldFNoaXAiLCJoaXQiLCJoaXRDb3VudCIsImxlbmd0aCIsInN1bmsiLCJpc1N1bmsiLCJyZXNldFNoaXAiLCJvcmllbnRhdGlvbiIsImNvbXAiLCJoaXRDb29yIiwiR2FtZWJvYXJkIiwiYm9hcmQiLCJtaXNzZXMiLCJoaXRzIiwiYWxsU2hpcHMiLCJiYXR0bGVzaGlwIiwiY3J1aXNlcl9JIiwiY3J1aXNlcl9JSSIsImRlc3Ryb3llcl9JIiwiZGVzdHJveWVyX0lJIiwiZGVzdHJveWVyX0lJSSIsInN1Ym1hcmluZV9JIiwic3VibWFyaW5lX0lJIiwic3VibWFyaW5lX0lJSSIsInN1Ym1hcmluZV9JViIsImlzRml0IiwiYXJyIiwic3RhdHVzIiwiZm9yRWFjaCIsIml0ZW0iLCJ4IiwieSIsImNyZWF0ZUNvbXAiLCJzaGlwIiwidGVtcCIsImEiLCJiIiwicHVzaCIsInBsYWNlU2hpcCIsImFsZXJ0IiwiY3JlYXRlQm9hcmQiLCJpIiwiaiIsImdldEJvYXJkIiwiZ2V0U2hpcHMiLCJyZWNlaXZlQXR0YWNrIiwiZ2V0TWlzc2VzIiwiZ2V0SGl0cyIsImlzQWxsU3VuayIsInNoaXBzIiwiT2JqZWN0IiwidmFsdWVzIiwicG9wdWxhdGVCZCIsImtleXMiLCJkaXJlY3Rpb25zIiwia2V5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwieiIsImZpdCIsInJlc2V0Qm9hcmQiLCJQbGF5ZXIiLCJudW1iZXIiLCJ3aW4iLCJpc0NvbXAiLCJmaWxsU3FyIiwicGxheWVyIiwic3FyIiwidGFnIiwiZmluZCIsInNldEF0dHJpYnV0ZSIsInJlbmRlckJvYXJkIiwic2hpcHNPYmoiLCJ4Q29vciIsInlDb29yIiwicmVuZGVyU2hpcCIsInBsYXllck51bSIsImN1cnJlbnRCb2FyZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJsYXN0RWxlbWVudENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJzcXVhcmUiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJoaWRlQm9hcmQiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVuZGVyUGxheUJkIiwiY3VyckJvYXJkIiwicXVlcnlTZWxlY3RvciIsImluaXRTcXJCdG4iLCJib2FyZExpc3QiLCJkaWFsb2ciLCJwYXJzZUludCIsImdldEF0dHJpYnV0ZSIsIndpbm5lciIsImVuZE1zZyIsIndpbmRvdyIsInBsYXllck5hbWUiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwiaWQiLCJ0ZXh0Q29udGVudCIsInNob3dNb2RhbCIsImdhbWVNb2RlIiwicHZwQnRuIiwicHZjQnRuIiwicmVzdGFydEJ0biIsInBsYXllck9uZSIsInBsYXllclR3byIsInBPbmUiLCJwVHdvIiwidmFsdWUiLCJzaGlwTmFtZSIsIm9yaWVudCIsIk51bWJlciIsImlzTmFOIiwibWFpbiIsImJ1dHRvbiIsImZvcm0iLCJpc0FsbFBsYWNlZCIsIm1vZGUiLCJpbml0RmluU2V0dXAiLCJQT25lIiwiUFR3byIsInBsYXlXaW5kb3ciLCJjbG9zZSIsInBsYXlPbmUiLCJwbGF5VHdvIiwiY29udCIsImF1dG9BdGsiLCJpbml0cGxheUJ0biIsInJlbW92ZUF0dHJpYnV0ZSJdLCJzb3VyY2VSb290IjoiIn0=